<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Poignant Code]]></title>
<<<<<<< HEAD
  <link href="http://poignantcode.com/atom.xml" rel="self"/>
  <link href="http://poignantcode.com/"/>
  <updated>2014-07-24T15:56:03-04:00</updated>
  <id>http://poignantcode.com/</id>
  <author>
    <name><![CDATA[]]></name>
=======
  <link href="http://Poignantcode.com/atom.xml" rel="self"/>
  <link href="http://Poignantcode.com/"/>
  <updated>2014-07-21T00:16:16-04:00</updated>
  <id>http://Poignantcode.com/</id>
  <author>
    <name><![CDATA[Sean Marcia]]></name>
>>>>>>> 6515e152b7c4bd75784ada3ab6b3f77da912f2d1
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
<<<<<<< HEAD
    <title type="html"><![CDATA[Refactoring towards Celluloid]]></title>
    <link href="http://poignantcode.com/blog/2014/07/21/refactoring/"/>
    <updated>2014-07-21T00:12:00-04:00</updated>
    <id>http://poignantcode.com/blog/2014/07/21/refactoring</id>
    <content type="html"><![CDATA[<p>(note: this blog post is work in progress, I figure since it was getting excessively long I would post what I have.)</p>

<h3 id="broken-gets-fixed-but-crap-lasts-forever">“Broken gets fixed but crap lasts forever.”</h3>

<p>We had a request a couple years ago for an automated link checker for all the sites in our system so our users would know when content they are linking to was no longer available. While tasks like this are important everywhere, in the academic setting, where I work, this is extremely important as our researchers and professors academic rankings depends on accurate and reviewable information.</p>

<p>I quickly hacked out a horrible solution that worked, put it into a cron job and then promised myself I’d come back and refactor when I had more time.</p>

<p>We’ve recently began to gamify the back end of our site to encourage user engagement and one of the metrics we’re using is the number of broken links. This required a refactoring of the task and a speeding up of it. This is something that is only run in a cron job once a month so the fact that it took 40 or so minutes wasn’t really an issue. We wanted to be able to speed this up so we could run it multiple times a day or hour if we wanted to.</p>

<!-- more -->

<p>So here’s the (ugly) code:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="ruby"><span class="line"><span class="vi">@emaillist</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class="line"><span class="vi">@events</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">all</span>
</span><span class="line"><span class="vi">@articles</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">all</span>
</span><span class="line"><span class="vi">@resources</span> <span class="o">=</span> <span class="no">Resource</span><span class="o">.</span><span class="n">all</span>
</span><span class="line"><span class="vi">@logfile</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s2">&quot;bad_link_log.txt&quot;</span><span class="p">,</span><span class="s2">&quot;w&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">organize_url</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">originating_site_domain</span><span class="p">)</span>
</span><span class="line">  <span class="n">url</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">originating_site_domain</span><span class="p">)</span> <span class="k">if</span> <span class="n">url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/^\//</span><span class="p">)</span>
</span><span class="line">  <span class="n">url</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;http://&quot;</span><span class="p">)</span> <span class="k">unless</span> <span class="p">((</span><span class="n">url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/^http\:\/\//</span><span class="p">))</span> <span class="ow">or</span> <span class="p">(</span><span class="n">url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/^https\:\/\//</span><span class="p">)))</span>
</span><span class="line">  <span class="n">url</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="n">url</span><span class="p">)</span> <span class="k">if</span> <span class="p">(</span><span class="n">url</span> <span class="o">=~</span> <span class="no">URI</span><span class="o">::</span><span class="no">DEFAULT_PARSER</span><span class="o">.</span><span class="n">regexp</span><span class="o">[</span><span class="ss">:ABS_URI</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span>
</span><span class="line">  <span class="k">return</span> <span class="n">url</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">notify_site</span><span class="p">(</span><span class="n">problem_type</span><span class="p">,</span> <span class="n">page_id</span><span class="p">,</span> <span class="n">domain</span><span class="p">,</span> <span class="n">email</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">page_type</span><span class="p">)</span>
</span><span class="line">  <span class="n">email</span> <span class="o">||=</span> <span class="s2">&quot;No Admin &lt;chssweb@gmu.edu&gt;&quot;</span>
</span><span class="line">  <span class="k">if</span> <span class="vi">@emaillist</span><span class="o">.</span><span class="n">has_key?</span><span class="p">(</span><span class="n">email</span><span class="p">)</span>
</span><span class="line">    <span class="vi">@emaillist</span><span class="o">[</span><span class="n">email</span><span class="o">]</span> <span class="o">+=</span> <span class="o">[</span><span class="s2">&quot;On </span><span class="si">#{</span><span class="n">domain</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">page_type</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">page_id</span><span class="si">}</span><span class="s2"> the link </span><span class="si">#{</span><span class="n">url</span><span class="si">}</span><span class="s2"> is returning a </span><span class="si">#{</span><span class="n">problem_type</span><span class="si">}</span><span class="s2">.&quot;</span><span class="o">]</span>
</span><span class="line">  <span class="k">else</span>
</span><span class="line">    <span class="vi">@emaillist</span><span class="o">[</span><span class="n">email</span><span class="o">]</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;On </span><span class="si">#{</span><span class="n">domain</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">page_type</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">page_id</span><span class="si">}</span><span class="s2"> the link </span><span class="si">#{</span><span class="n">url</span><span class="si">}</span><span class="s2"> is returning a </span><span class="si">#{</span><span class="n">problem_type</span><span class="si">}</span><span class="s2">.&quot;</span><span class="o">]</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">  <span class="vi">@logfile</span><span class="o">.</span><span class="n">puts</span><span class="p">(</span><span class="s2">&quot;There was a </span><span class="si">#{</span><span class="n">problem_type</span><span class="si">}</span><span class="s2"> on </span><span class="si">#{</span><span class="n">domain</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">page_type</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">page_id</span><span class="si">}</span><span class="s2"> linking to </span><span class="si">#{</span><span class="n">url</span><span class="si">}</span><span class="s2"> and </span><span class="si">#{</span><span class="n">email</span><span class="si">}</span><span class="s2"> was notified.&quot;</span><span class="p">)</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">find_broken_link</span><span class="p">(</span><span class="n">original_site</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">admin_email</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">page_type</span><span class="p">)</span>
</span><span class="line">  <span class="n">baseurl</span> <span class="o">=</span> <span class="n">organize_url</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">original_site</span><span class="p">)</span>
</span><span class="line">  <span class="k">begin</span>
</span><span class="line">    <span class="n">res</span> <span class="o">=</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTP</span><span class="o">.</span><span class="n">get_response</span><span class="p">(</span><span class="no">URI</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">baseurl</span><span class="p">))</span>
</span><span class="line">    <span class="nb">puts</span> <span class="s2">&quot;Code: </span><span class="si">#{</span><span class="n">res</span><span class="o">.</span><span class="n">code</span><span class="si">}</span><span class="s2"> for </span><span class="si">#{</span><span class="n">url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line">    <span class="n">notify_site</span><span class="p">(</span><span class="s2">&quot;404 error&quot;</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">original_site</span><span class="p">,</span> <span class="n">admin_email</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">page_type</span><span class="p">)</span> <span class="k">if</span> <span class="p">(</span><span class="n">res</span><span class="o">.</span><span class="n">code</span><span class="o">.</span><span class="n">to_i</span> <span class="o">==</span> <span class="mi">404</span><span class="p">)</span>
</span><span class="line">  <span class="k">rescue</span>
</span><span class="line">    <span class="nb">puts</span> <span class="s2">&quot;Broken/bad link for </span><span class="si">#{</span><span class="n">url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line">    <span class="n">notify_site</span><span class="p">(</span><span class="s2">&quot;broken link error&quot;</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">original_site</span><span class="p">,</span> <span class="n">admin_email</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">page_type</span><span class="p">)</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">release_the_dogs</span><span class="p">(</span><span class="n">admin_contact</span><span class="p">,</span> <span class="n">contact_message</span><span class="p">)</span>
</span><span class="line">  <span class="no">BrokenLinkMailer</span><span class="o">.</span><span class="n">broken_link_notifier</span><span class="p">(</span><span class="n">admin_contact</span><span class="p">,</span> <span class="n">contact_message</span><span class="p">)</span><span class="o">.</span><span class="n">deliver</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="vi">@emaillist</span><span class="o">.</span><span class="n">each_key</span> <span class="k">do</span> <span class="o">|</span><span class="n">key</span><span class="o">|</span>
</span><span class="line">  <span class="n">release_the_dogs</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="vi">@emaillist</span><span class="o">[</span><span class="n">key</span><span class="o">]</span><span class="p">)</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="vi">@events</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
</span><span class="line">  <span class="k">if</span> <span class="n">e</span><span class="o">.</span><span class="n">url?</span>
</span><span class="line">    <span class="n">find_broken_link</span><span class="p">(</span><span class="n">e</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">e</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">e</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">e</span><span class="o">.</span><span class="n">url</span><span class="p">,</span><span class="s2">&quot;events&quot;</span><span class="p">)</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">  <span class="n">long_desc_links</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">extract</span><span class="p">(</span><span class="n">e</span><span class="o">.</span><span class="n">long_description</span><span class="p">)</span><span class="o">.</span><span class="n">select!</span><span class="p">{</span><span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">v</span> <span class="o">=~</span> <span class="sr">/http/</span><span class="p">}</span>
</span><span class="line">  <span class="k">if</span> <span class="o">!</span><span class="n">long_desc_links</span><span class="o">.</span><span class="n">blank?</span>
</span><span class="line">    <span class="n">long_desc_links</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">link</span><span class="o">|</span>
</span><span class="line">      <span class="n">find_broken_link</span><span class="p">(</span><span class="n">e</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">e</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">e</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">link</span><span class="p">,</span><span class="s2">&quot;events&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="vi">@articles</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span>
</span><span class="line">  <span class="k">if</span> <span class="n">a</span><span class="o">.</span><span class="n">url_link?</span>
</span><span class="line">    <span class="n">find_broken_link</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">a</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">a</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">a</span><span class="o">.</span><span class="n">url_link</span><span class="p">,</span><span class="s2">&quot;articles&quot;</span><span class="p">)</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">  <span class="n">long_desc_links</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">extract</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">main_content</span><span class="p">)</span><span class="o">.</span><span class="n">select!</span><span class="p">{</span><span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">v</span> <span class="o">=~</span> <span class="sr">/http/</span><span class="p">}</span>
</span><span class="line">  <span class="k">if</span> <span class="o">!</span><span class="n">long_desc_links</span><span class="o">.</span><span class="n">blank?</span>
</span><span class="line">    <span class="n">long_desc_links</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">link</span><span class="o">|</span>
</span><span class="line">      <span class="n">find_broken_link</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">a</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">a</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">link</span><span class="p">,</span><span class="s2">&quot;articles&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="vi">@resources</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">r</span><span class="o">|</span>
</span><span class="line">  <span class="k">if</span> <span class="n">r</span><span class="o">.</span><span class="n">page_id?</span>
</span><span class="line">    <span class="k">if</span> <span class="n">r</span><span class="o">.</span><span class="n">url?</span>
</span><span class="line">      <span class="n">find_broken_link</span><span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">r</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">r</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">r</span><span class="o">.</span><span class="n">url</span><span class="p">,</span><span class="s2">&quot;resources&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="vi">@emaillist</span><span class="o">.</span><span class="n">each_key</span> <span class="k">do</span> <span class="o">|</span><span class="n">key</span><span class="o">|</span>
</span><span class="line">  <span class="n">release_the_dogs</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="vi">@emaillist</span><span class="o">[</span><span class="n">key</span><span class="o">]</span><span class="p">)</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="vi">@logfile</span><span class="o">.</span><span class="n">close</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Starting with the low hanging fruit:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="ruby"><span class="line">  <span class="vi">@events</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">all</span>
</span><span class="line">  <span class="vi">@articles</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">all</span>
</span><span class="line">  <span class="vi">@resources</span> <span class="o">=</span> <span class="no">Resource</span><span class="o">.</span><span class="n">all</span>
</span><span class="line"><span class="o">.</span>
</span><span class="line"><span class="o">.</span>
</span><span class="line"><span class="o">.</span>
</span><span class="line">  <span class="vi">@events</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
</span><span class="line">    <span class="k">if</span> <span class="n">e</span><span class="o">.</span><span class="n">url?</span>
</span><span class="line">      <span class="n">find_broken_link</span><span class="p">(</span><span class="n">e</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">e</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">e</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">e</span><span class="o">.</span><span class="n">url</span><span class="p">,</span><span class="s2">&quot;events&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="n">long_desc_links</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">extract</span><span class="p">(</span><span class="n">e</span><span class="o">.</span><span class="n">long_description</span><span class="p">)</span><span class="o">.</span><span class="n">select!</span><span class="p">{</span><span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">v</span> <span class="o">=~</span> <span class="sr">/http/</span><span class="p">}</span>
</span><span class="line">    <span class="k">if</span> <span class="o">!</span><span class="n">long_desc_links</span><span class="o">.</span><span class="n">blank?</span>
</span><span class="line">      <span class="n">long_desc_links</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">link</span><span class="o">|</span>
</span><span class="line">        <span class="n">find_broken_link</span><span class="p">(</span><span class="n">e</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">e</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">e</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">link</span><span class="p">,</span><span class="s2">&quot;events&quot;</span><span class="p">)</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="vi">@articles</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span>
</span><span class="line">    <span class="k">if</span> <span class="n">a</span><span class="o">.</span><span class="n">url_link?</span>
</span><span class="line">      <span class="n">find_broken_link</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">a</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">a</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">a</span><span class="o">.</span><span class="n">url_link</span><span class="p">,</span><span class="s2">&quot;articles&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="n">long_desc_links</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">extract</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">main_content</span><span class="p">)</span><span class="o">.</span><span class="n">select!</span><span class="p">{</span><span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">v</span> <span class="o">=~</span> <span class="sr">/http/</span><span class="p">}</span>
</span><span class="line">    <span class="k">if</span> <span class="o">!</span><span class="n">long_desc_links</span><span class="o">.</span><span class="n">blank?</span>
</span><span class="line">      <span class="n">long_desc_links</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">link</span><span class="o">|</span>
</span><span class="line">        <span class="n">find_broken_link</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">a</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">a</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">link</span><span class="p">,</span><span class="s2">&quot;articles&quot;</span><span class="p">)</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="vi">@resources</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">r</span><span class="o">|</span>
</span><span class="line">    <span class="k">if</span> <span class="n">r</span><span class="o">.</span><span class="n">page_id?</span>
</span><span class="line">      <span class="k">if</span> <span class="n">r</span><span class="o">.</span><span class="n">url?</span>
</span><span class="line">        <span class="n">find_broken_link</span><span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">r</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">r</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">r</span><span class="o">.</span><span class="n">url</span><span class="p">,</span><span class="s2">&quot;resources&quot;</span><span class="p">)</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>I started by creating a scope in resources that checks for a <code>page_id</code> and a <code>url</code>. I also created some aliases for <code>url_link</code> and <code>main_content</code> to in my <code>Article</code> model in order to have parity with the <code>Event</code> and <code>Resource</code> model in order to get some uniformity.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="ruby"><span class="line"><span class="vi">@events</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">unlinked_events</span>
</span><span class="line"><span class="vi">@event_links</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">linked_events</span>
</span><span class="line"><span class="vi">@articles</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">unlinked_articles</span>
</span><span class="line"><span class="vi">@article_links</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">linked_articles</span>
</span><span class="line"><span class="vi">@resources</span> <span class="o">=</span> <span class="no">Resource</span><span class="o">.</span><span class="n">link_resources</span>
</span><span class="line">
</span><span class="line"><span class="o">[</span><span class="vi">@event_links</span><span class="p">,</span> <span class="vi">@article_links</span><span class="p">,</span> <span class="vi">@resources</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">collection_item</span><span class="o">|</span>
</span><span class="line">  <span class="n">collection_item</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class="line">    <span class="n">find_broken_link</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">item</span><span class="o">.</span><span class="n">id</span><span class="p">,</span>
</span><span class="line">                               <span class="n">item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span>
</span><span class="line">                               <span class="n">item</span><span class="o">.</span><span class="n">url</span><span class="p">,</span><span class="n">item</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">downcase</span><span class="o">.</span><span class="n">pluralize</span><span class="p">)</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="o">[</span><span class="vi">@events</span><span class="p">,</span> <span class="vi">@articles</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">collection_item</span><span class="o">|</span>
</span><span class="line">  <span class="n">collection_item</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class="line">    <span class="n">long_desc_links</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">extract</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">long_description</span><span class="p">)</span><span class="o">.</span><span class="n">select!</span><span class="p">{</span><span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">v</span> <span class="o">=~</span> <span class="sr">/http/</span><span class="p">}</span>
</span><span class="line">    <span class="k">unless</span> <span class="n">long_desc_links</span><span class="o">.</span><span class="n">blank?</span>
</span><span class="line">      <span class="n">long_desc_links</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">link</span><span class="o">|</span>
</span><span class="line">        <span class="n">find_broken_link</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">item</span><span class="o">.</span><span class="n">id</span><span class="p">,</span>
</span><span class="line">                                   <span class="n">item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span>
</span><span class="line">                                   <span class="n">link</span><span class="p">,</span><span class="n">item</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">downcase</span><span class="o">.</span><span class="n">pluralize</span><span class="p">)</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Was passing too much stuff into <code>find_broken_link</code> so that was decomposed.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="ruby"><span class="line"><span class="o">[</span><span class="vi">@event_links</span><span class="p">,</span> <span class="vi">@article_links</span><span class="p">,</span> <span class="vi">@resources</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">collection_item</span><span class="o">|</span>
</span><span class="line">  <span class="n">collection_item</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class="line">    <span class="n">find_broken_link</span><span class="p">(</span><span class="n">link_details</span><span class="p">(</span><span class="n">item</span><span class="p">))</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="o">[</span><span class="vi">@events</span><span class="p">,</span> <span class="vi">@articles</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">collection_item</span><span class="o">|</span>
</span><span class="line">  <span class="n">collection_item</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class="line">    <span class="n">long_desc_links</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">extract</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">long_description</span><span class="p">)</span><span class="o">.</span><span class="n">select!</span><span class="p">{</span><span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">v</span> <span class="o">=~</span> <span class="sr">/http/</span><span class="p">}</span>
</span><span class="line">    <span class="k">unless</span> <span class="n">long_desc_links</span><span class="o">.</span><span class="n">blank?</span>
</span><span class="line">      <span class="n">long_desc_links</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">link</span><span class="o">|</span>
</span><span class="line">        <span class="n">find_broken_link</span><span class="p">(</span><span class="n">link_details</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="n">link</span><span class="p">))</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1">#method for cleaning up the passed in stuff called inside find_broken_link:</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">link_details</span><span class="p">(</span><span class="n">link_item</span><span class="p">,</span> <span class="n">link</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="ss">:original_site</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span>
</span><span class="line">    <span class="ss">:id</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">id</span><span class="p">,</span>
</span><span class="line">    <span class="ss">:admin_email</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span>
</span><span class="line">    <span class="ss">:url</span> <span class="o">=&gt;</span> <span class="n">link</span><span class="o">.</span><span class="n">nil?</span> <span class="p">?</span> <span class="n">link_item</span><span class="o">.</span><span class="n">url</span> <span class="p">:</span> <span class="n">link</span><span class="p">,</span>
</span><span class="line">    <span class="ss">:page_type</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">downcase</span><span class="o">.</span><span class="n">pluralize</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Nothing here really sped the task up so that was the next part. I next implemented Celluloid and broke this up into three files.</p>

<p>Lots of instance variables:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="ruby"><span class="line"><span class="c1">#checker.rb</span>
</span><span class="line"><span class="nb">require</span> <span class="s1">&#39;celluloid/autostart&#39;</span>
</span><span class="line"><span class="nb">require</span> <span class="s1">&#39;logger&#39;</span>
</span><span class="line"><span class="n">require_relative</span> <span class="s1">&#39;broken_link/link_cell&#39;</span>
</span><span class="line"><span class="n">require_relative</span> <span class="s1">&#39;broken_link/link_checker&#39;</span>
</span><span class="line">
</span><span class="line"><span class="k">module</span> <span class="nn">Checker</span>
</span><span class="line">  <span class="no">DEFAULTS</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">    <span class="n">default_protocol</span><span class="p">:</span>   <span class="s1">&#39;http://&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">pool_size</span><span class="p">:</span>          <span class="mi">25</span><span class="p">,</span>
</span><span class="line">    <span class="n">logger_class</span><span class="p">:</span>       <span class="no">Logger</span><span class="p">,</span>
</span><span class="line">    <span class="n">admin_email</span><span class="p">:</span>        <span class="s2">&quot;No Admin &lt;chssweb@gmu.edu&gt;&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="n">log_file_name</span><span class="p">:</span>      <span class="s2">&quot;bad_link_log.csv&quot;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">
</span><span class="line">  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">linkcheck</span><span class="p">(</span><span class="n">opts</span><span class="o">=</span><span class="p">{})</span>
</span><span class="line">    <span class="n">link_check_results</span> <span class="o">=</span> <span class="no">LinkChecker</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">opts</span><span class="p">)</span>
</span><span class="line">    <span class="n">link_check_results</span><span class="o">.</span><span class="n">agent_pool</span><span class="o">.</span><span class="n">future</span><span class="o">.</span><span class="n">terminate</span>
</span><span class="line">
</span><span class="line">    <span class="n">link_check_results</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="ruby"><span class="line"><span class="k">module</span> <span class="nn">Checker</span>
</span><span class="line">  <span class="k">class</span> <span class="nc">LinkChecker</span>
</span><span class="line">    <span class="kp">attr_reader</span> <span class="ss">:agent_pool</span><span class="p">,</span> <span class="ss">:opts</span><span class="p">,</span> <span class="ss">:default_protocol</span><span class="p">,</span> <span class="ss">:output_file</span><span class="p">,</span> <span class="ss">:logger</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">override_opts</span><span class="o">=</span><span class="p">{})</span>
</span><span class="line">      <span class="vi">@opts</span>  <span class="o">=</span> <span class="no">DEFAULTS</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">override_opts</span><span class="p">)</span>
</span><span class="line">      <span class="vi">@default_protocol</span> <span class="o">=</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:default_protocol</span><span class="o">]</span>
</span><span class="line">      <span class="vi">@output_file</span> <span class="o">=</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:output_file</span><span class="o">]</span> <span class="o">||</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">opts</span><span class="o">[</span><span class="ss">:log_file_name</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">)</span>
</span><span class="line">      <span class="vi">@logger</span> <span class="o">=</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:logger_class</span><span class="o">].</span><span class="n">new</span><span class="p">(</span><span class="n">output_file</span><span class="p">)</span>
</span><span class="line">      <span class="vi">@agent_pool</span> <span class="o">=</span> <span class="no">LinkCell</span><span class="o">.</span><span class="n">pool</span><span class="p">(</span><span class="n">size</span><span class="p">:</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:pool_size</span><span class="o">]</span><span class="p">,</span> <span class="n">args</span><span class="p">:</span> <span class="o">[</span><span class="n">logger</span><span class="o">]</span><span class="p">)</span>
</span><span class="line">      <span class="vi">@events</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">unlinked_events</span>
</span><span class="line">      <span class="vi">@event_links</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">linked_events</span>
</span><span class="line">      <span class="vi">@articles</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">unlinked_articles</span>
</span><span class="line">      <span class="vi">@article_links</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">linked_articles</span>
</span><span class="line">      <span class="vi">@resources</span> <span class="o">=</span> <span class="no">Resource</span><span class="o">.</span><span class="n">linkable</span>
</span><span class="line">      <span class="vi">@count</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class="line">      <span class="n">check_embedded_links</span>
</span><span class="line">      <span class="n">check_direct_links</span>
</span><span class="line">      <span class="nb">self</span>
</span><span class="line">    <span class="k">ensure</span>
</span><span class="line">      <span class="n">output_file</span><span class="o">.</span><span class="n">close</span> <span class="k">if</span> <span class="n">output_file</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:close</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">check_direct_links</span>
</span><span class="line">      <span class="o">[</span><span class="vi">@event_links</span><span class="p">,</span> <span class="vi">@article_links</span><span class="p">,</span> <span class="vi">@resources</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">collection_item</span><span class="o">|</span>
</span><span class="line">        <span class="n">collection_item</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class="line">          <span class="n">find_broken_link</span><span class="p">(</span><span class="n">link_details</span><span class="p">(</span><span class="n">item</span><span class="p">))</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">check_embedded_links</span>
</span><span class="line">      <span class="o">[</span><span class="vi">@events</span><span class="p">,</span> <span class="vi">@articles</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">collection_item</span><span class="o">|</span>
</span><span class="line">        <span class="n">collection_item</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class="line">          <span class="n">long_desc_links</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">extract</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">long_description</span><span class="p">)</span><span class="o">.</span><span class="n">select!</span><span class="p">{</span><span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">v</span> <span class="o">=~</span> <span class="sr">/http/</span><span class="p">}</span>
</span><span class="line">          <span class="k">unless</span> <span class="n">long_desc_links</span><span class="o">.</span><span class="n">blank?</span>
</span><span class="line">            <span class="n">long_desc_links</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">link</span><span class="o">|</span>
</span><span class="line">              <span class="n">find_broken_link</span><span class="p">(</span><span class="n">link_details</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="n">link</span><span class="p">))</span>
</span><span class="line">            <span class="k">end</span>
</span><span class="line">          <span class="k">end</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="kp">private</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">link_details</span><span class="p">(</span><span class="n">link_item</span><span class="p">,</span> <span class="n">link</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class="line">      <span class="p">{</span>
</span><span class="line">        <span class="ss">:original_site</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span>
</span><span class="line">        <span class="ss">:id</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">id</span><span class="p">,</span>
</span><span class="line">        <span class="ss">:admin_email</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="o">.</span><span class="n">empty?</span> <span class="p">?</span> <span class="s2">&quot;No Admin &lt;chssweb@gmu.edu&gt;&quot;</span> <span class="p">:</span> <span class="n">link_item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span>
</span><span class="line">        <span class="ss">:url</span> <span class="o">=&gt;</span> <span class="n">link</span><span class="o">.</span><span class="n">nil?</span> <span class="p">?</span> <span class="n">link_item</span><span class="o">.</span><span class="n">url</span> <span class="p">:</span> <span class="n">link</span><span class="p">,</span>
</span><span class="line">        <span class="ss">:page_type</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">downcase</span><span class="o">.</span><span class="n">pluralize</span>
</span><span class="line">      <span class="p">}</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">find_broken_link</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class="line">      <span class="n">agent_pool</span><span class="o">.</span><span class="n">future</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="ruby"><span class="line"><span class="k">module</span> <span class="nn">Checker</span>
</span><span class="line">  <span class="k">class</span> <span class="nc">LinkCell</span>
</span><span class="line">    <span class="kp">include</span> <span class="no">Celluloid</span>
</span><span class="line">
</span><span class="line">    <span class="kp">attr_reader</span> <span class="ss">:logger</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">logger</span><span class="p">)</span>
</span><span class="line">      <span class="vi">@logger</span> <span class="o">=</span> <span class="n">logger</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">organize_url</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">originating_site_domain</span><span class="p">)</span>
</span><span class="line">      <span class="n">url</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">originating_site_domain</span><span class="p">)</span> <span class="k">if</span> <span class="n">url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/^\//</span><span class="p">)</span>
</span><span class="line">      <span class="n">url</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;http://&quot;</span><span class="p">)</span> <span class="k">unless</span> <span class="p">(((</span><span class="n">url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/^http\:\/\//</span><span class="p">))</span> <span class="ow">or</span> <span class="p">(</span><span class="n">url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/^https\:\/\//</span><span class="p">)))</span> <span class="o">||</span> <span class="n">url</span><span class="o">.</span><span class="n">empty?</span><span class="p">)</span>
</span><span class="line">      <span class="n">url</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="n">url</span><span class="p">)</span> <span class="k">if</span> <span class="p">(</span><span class="n">url</span> <span class="o">=~</span> <span class="no">URI</span><span class="o">::</span><span class="no">DEFAULT_PARSER</span><span class="o">.</span><span class="n">regexp</span><span class="o">[</span><span class="ss">:ABS_URI</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span>
</span><span class="line">      <span class="k">return</span> <span class="n">url</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="n">link</span><span class="p">)</span>
</span><span class="line">      <span class="n">site</span> <span class="o">=</span> <span class="n">link</span><span class="o">[</span><span class="ss">:original_site</span><span class="o">]</span>
</span><span class="line">      <span class="k">return</span> <span class="k">if</span> <span class="n">organize_url</span><span class="p">(</span><span class="n">link</span><span class="o">[</span><span class="ss">:url</span><span class="o">]</span><span class="p">,</span><span class="n">site</span><span class="p">)</span><span class="o">.</span><span class="n">empty?</span>
</span><span class="line">      <span class="n">baseurl</span> <span class="o">=</span> <span class="n">organize_url</span><span class="p">(</span><span class="n">link</span><span class="o">[</span><span class="ss">:url</span><span class="o">]</span><span class="p">,</span><span class="n">site</span><span class="p">)</span>
</span><span class="line">      <span class="k">begin</span>
</span><span class="line">        <span class="n">res</span> <span class="o">=</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTP</span><span class="o">.</span><span class="n">get_response</span><span class="p">(</span><span class="no">URI</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">baseurl</span><span class="p">))</span>
</span><span class="line">        <span class="nb">puts</span> <span class="s2">&quot;Code: </span><span class="si">#{</span><span class="n">res</span><span class="o">.</span><span class="n">code</span><span class="si">}</span><span class="s2"> for </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:url</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line">        <span class="n">logger</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;404 error, </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:original_site</span><span class="o">]</span><span class="si">}</span><span class="s2">, \</span>
</span><span class="line"><span class="s2">                  </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:admin_email</span><span class="o">]</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:url</span><span class="o">]</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:page_type</span><span class="o">]</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span> <span class="k">if</span> <span class="p">(</span><span class="n">res</span><span class="o">.</span><span class="n">code</span><span class="o">.</span><span class="n">to_i</span> <span class="o">==</span> <span class="mi">404</span><span class="p">)</span>
</span><span class="line">      <span class="k">rescue</span>
</span><span class="line">        <span class="nb">puts</span> <span class="s2">&quot;Broken/bad link for </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:url</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line">        <span class="n">logger</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;Broken link error, </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:original_site</span><span class="o">]</span><span class="si">}</span><span class="s2">, \</span>
</span><span class="line"><span class="s2">                  </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:admin_email</span><span class="o">]</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:url</span><span class="o">]</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:page_type</span><span class="o">]</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>I’m still on the fence on <code>DEFAULTS</code> option has I pass in. I realize it is probably better OO to do it that way and it makes it better for customizing and changing in the future but I fell that right now it is just wasting space.</p>

<p>So after cleaning up all those ugly instance variables:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="ruby"><span class="line"><span class="c1">#link_checker.rb</span>
</span><span class="line"><span class="k">module</span> <span class="nn">Checker</span>
</span><span class="line">  <span class="k">class</span> <span class="nc">LinkChecker</span>
</span><span class="line">    <span class="kp">attr_reader</span> <span class="ss">:agent_pool</span><span class="p">,</span> <span class="ss">:direct_links</span><span class="p">,</span> <span class="ss">:embedded_links</span><span class="p">,</span> <span class="ss">:logger</span><span class="p">,</span> <span class="ss">:opts</span><span class="p">,</span> <span class="ss">:output_file</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">override_opts</span><span class="o">=</span><span class="p">{})</span>
</span><span class="line">      <span class="vi">@opts</span>  <span class="o">=</span> <span class="no">DEFAULTS</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">override_opts</span><span class="p">)</span>
</span><span class="line">      <span class="vi">@output_file</span> <span class="o">=</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:output_file</span><span class="o">]</span> <span class="o">||</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">opts</span><span class="o">[</span><span class="ss">:log_file_name</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">)</span>
</span><span class="line">      <span class="vi">@logger</span> <span class="o">=</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:logger_class</span><span class="o">].</span><span class="n">new</span><span class="p">(</span><span class="n">output_file</span><span class="p">)</span>
</span><span class="line">      <span class="vi">@agent_pool</span> <span class="o">=</span> <span class="no">LinkCell</span><span class="o">.</span><span class="n">pool</span><span class="p">(</span><span class="ss">size</span><span class="p">:</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:pool_size</span><span class="o">]</span><span class="p">,</span> <span class="ss">args</span><span class="p">:</span> <span class="o">[</span><span class="n">logger</span><span class="o">]</span><span class="p">)</span>
</span><span class="line">      <span class="vi">@embedded_links</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">unlinked_events</span> <span class="o">+</span> <span class="no">Article</span><span class="o">.</span><span class="n">unlinked_articles</span>
</span><span class="line">      <span class="vi">@direct_links</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">linked_events</span> <span class="o">+</span> <span class="no">Article</span><span class="o">.</span><span class="n">linked_articles</span> <span class="o">+</span> <span class="no">Resource</span><span class="o">.</span><span class="n">linkable</span>
</span><span class="line">      <span class="n">check_embedded_links</span>
</span><span class="line">      <span class="n">check_direct_links</span>
</span><span class="line">      <span class="nb">self</span>
</span><span class="line">    <span class="k">ensure</span>
</span><span class="line">      <span class="n">output_file</span><span class="o">.</span><span class="n">close</span> <span class="k">if</span> <span class="n">output_file</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:close</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">check_direct_links</span>
</span><span class="line">      <span class="n">direct_links</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class="line">        <span class="n">find_broken_link</span><span class="p">(</span><span class="n">link_details</span><span class="p">(</span><span class="n">item</span><span class="p">))</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">check_embedded_links</span>
</span><span class="line">      <span class="n">embedded_links</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class="line">        <span class="n">long_desc_links</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">extract</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">long_description</span><span class="p">)</span><span class="o">.</span><span class="n">select!</span><span class="p">{</span><span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">v</span> <span class="o">=~</span> <span class="sr">/http/</span><span class="p">}</span>
</span><span class="line">        <span class="k">unless</span> <span class="n">long_desc_links</span><span class="o">.</span><span class="n">blank?</span>
</span><span class="line">          <span class="n">long_desc_links</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">link</span><span class="o">|</span>
</span><span class="line">            <span class="n">find_broken_link</span><span class="p">(</span><span class="n">link_details</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="n">link</span><span class="p">))</span>
</span><span class="line">          <span class="k">end</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">link_details</span><span class="p">(</span><span class="n">link_item</span><span class="p">,</span> <span class="n">link</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class="line">      <span class="p">{</span>
</span><span class="line">        <span class="ss">:original_site</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span>
</span><span class="line">        <span class="ss">:id</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">id</span><span class="p">,</span>
</span><span class="line">        <span class="ss">:admin_email</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="o">.</span><span class="n">empty?</span> <span class="p">?</span> <span class="s2">&quot;No Admin &lt;chssweb@gmu.edu&gt;&quot;</span> <span class="p">:</span> <span class="n">link_item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span>
</span><span class="line">        <span class="ss">:url</span> <span class="o">=&gt;</span> <span class="n">link</span><span class="o">.</span><span class="n">nil?</span> <span class="p">?</span> <span class="n">link_item</span><span class="o">.</span><span class="n">url</span> <span class="p">:</span> <span class="n">link</span><span class="p">,</span>
</span><span class="line">        <span class="ss">:page_type</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">downcase</span><span class="o">.</span><span class="n">pluralize</span><span class="p">,</span>
</span><span class="line">        <span class="ss">:originating_site</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">id</span>
</span><span class="line">      <span class="p">}</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">find_broken_link</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class="line">      <span class="n">agent_pool</span><span class="o">.</span><span class="n">future</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line"><span class="c1">###</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>I wanted to start fresh with a new log each time so:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;celluloid/autostart&#39;</span>
</span><span class="line"><span class="nb">require</span> <span class="s1">&#39;logger&#39;</span>
</span><span class="line"><span class="n">require_relative</span> <span class="s1">&#39;broken_link/link_cell&#39;</span>
</span><span class="line"><span class="n">require_relative</span> <span class="s1">&#39;broken_link/link_checker&#39;</span>
</span><span class="line">
</span><span class="line"><span class="k">module</span> <span class="nn">Checker</span>
</span><span class="line">  <span class="no">DEFAULTS</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">    <span class="n">pool_size</span><span class="p">:</span>          <span class="mi">25</span><span class="p">,</span>
</span><span class="line">    <span class="n">logger_class</span><span class="p">:</span>       <span class="no">Logger</span><span class="p">,</span>
</span><span class="line">    <span class="n">admin_email</span><span class="p">:</span>        <span class="s2">&quot;No Admin &lt;chssweb@gmu.edu&gt;&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="n">log_file_name</span><span class="p">:</span>      <span class="s2">&quot;bad_link_log.csv&quot;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">
</span><span class="line">  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">linkcheck</span><span class="p">(</span><span class="n">opts</span><span class="o">=</span><span class="p">{})</span>
</span><span class="line">    <span class="no">File</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="s2">&quot;bad_link_log.csv&quot;</span><span class="p">)</span> <span class="k">if</span> <span class="no">File</span><span class="o">.</span><span class="n">exist?</span><span class="p">(</span><span class="s2">&quot;bad_link_log.csv&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="n">link_check_results</span> <span class="o">=</span> <span class="no">LinkChecker</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">opts</span><span class="p">)</span>
</span><span class="line">    <span class="n">link_check_results</span><span class="o">.</span><span class="n">agent_pool</span><span class="o">.</span><span class="n">future</span><span class="o">.</span><span class="n">terminate</span>
</span><span class="line">
</span><span class="line">    <span class="n">link_check_results</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>No updates yet on the <code>link_cell.rb</code> file but this has greatly improved the speed of the task. What was a ~35 minute task now runs in about a minute.</p>

<p>More refactorings on this to come…</p>
=======
    <title type="html"><![CDATA[Refactoring]]></title>
    <link href="http://Poignantcode.com/blog/2014/07/21/refactoring/"/>
    <updated>2014-07-21T00:12:00-04:00</updated>
    <id>http://Poignantcode.com/blog/2014/07/21/refactoring</id>
    <content type="html"><![CDATA[<p>(note: this blog post is work in progress, I figure since it was getting excessively long I figured I post what I have.)</p>

<h3>&#8220;Broken gets fixed but crap lasts forever.&#8221;</h3>

<p>We had a request a couple years ago for an automated link checker for all the sites in our system so our users would know when content they are linking to was no longer available. While tasks like this are important everywhere, in the academic setting, where I work, this is extremely important as our researchers and professors academic rankings depends on accurate and reviewable information.</p>

<p>I quickly hacked out a horrible solution that worked, put it into a cron job and then promised myself I&#8217;d come back and refactor when I had more time.</p>

<!-- more -->


<p>So here&#8217;s the code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@emaillist</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'><span class="vi">@events</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'><span class="vi">@articles</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'><span class="vi">@resources</span> <span class="o">=</span> <span class="no">Resource</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'><span class="vi">@logfile</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s2">&quot;bad_link_log.txt&quot;</span><span class="p">,</span><span class="s2">&quot;w&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">organize_url</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">originating_site_domain</span><span class="p">)</span>
</span><span class='line'>  <span class="n">url</span><span class="o">.</span><span class="n">gsub!</span><span class="p">(</span><span class="sr">/gmu.local/</span><span class="p">,</span><span class="s1">&#39;gmu.edu&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">url</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">originating_site_domain</span><span class="p">)</span> <span class="k">if</span> <span class="n">url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/^\//</span><span class="p">)</span>
</span><span class='line'>  <span class="n">url</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;http://&quot;</span><span class="p">)</span> <span class="k">unless</span> <span class="p">((</span><span class="n">url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/^http\:\/\//</span><span class="p">))</span> <span class="ow">or</span> <span class="p">(</span><span class="n">url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/^https\:\/\//</span><span class="p">)))</span>
</span><span class='line'>  <span class="n">url</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="n">url</span><span class="p">)</span> <span class="k">if</span> <span class="p">(</span><span class="n">url</span> <span class="o">=~</span> <span class="no">URI</span><span class="o">::</span><span class="no">DEFAULT_PARSER</span><span class="o">.</span><span class="n">regexp</span><span class="o">[</span><span class="ss">:ABS_URI</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">url</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">notify_site</span><span class="p">(</span><span class="n">problem_type</span><span class="p">,</span> <span class="n">page_id</span><span class="p">,</span> <span class="n">domain</span><span class="p">,</span> <span class="n">email</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">page_type</span><span class="p">)</span>
</span><span class='line'>  <span class="n">email</span> <span class="o">||=</span> <span class="s2">&quot;No Admin &lt;chssweb@gmu.edu&gt;&quot;</span>
</span><span class='line'>  <span class="k">if</span> <span class="vi">@emaillist</span><span class="o">.</span><span class="n">has_key?</span><span class="p">(</span><span class="n">email</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@emaillist</span><span class="o">[</span><span class="n">email</span><span class="o">]</span> <span class="o">+=</span> <span class="o">[</span><span class="s2">&quot;On </span><span class="si">#{</span><span class="n">domain</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">page_type</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">page_id</span><span class="si">}</span><span class="s2"> the link </span><span class="si">#{</span><span class="n">url</span><span class="si">}</span><span class="s2"> is returning a </span><span class="si">#{</span><span class="n">problem_type</span><span class="si">}</span><span class="s2">. &lt;a href=</span><span class="se">\&quot;</span><span class="s2">http://</span><span class="si">#{</span><span class="n">domain</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="s2">&quot;edu&quot;</span><span class="p">,</span><span class="s2">&quot;edu/admin&quot;</span><span class="p">)</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">page_type</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">page_id</span><span class="si">}</span><span class="se">\&quot;</span><span class="s2">&gt;Fix it!&lt;/a&gt;&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="vi">@emaillist</span><span class="o">[</span><span class="n">email</span><span class="o">]</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;On </span><span class="si">#{</span><span class="n">domain</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">page_type</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">page_id</span><span class="si">}</span><span class="s2"> the link </span><span class="si">#{</span><span class="n">url</span><span class="si">}</span><span class="s2"> is returning a </span><span class="si">#{</span><span class="n">problem_type</span><span class="si">}</span><span class="s2">. &lt;a href=</span><span class="se">\&quot;</span><span class="s2">http://</span><span class="si">#{</span><span class="n">domain</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="s2">&quot;edu&quot;</span><span class="p">,</span><span class="s2">&quot;edu/admin&quot;</span><span class="p">)</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">page_type</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">page_id</span><span class="si">}</span><span class="se">\&quot;</span><span class="s2">&gt;Fix it!&lt;/a&gt;&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="vi">@logfile</span><span class="o">.</span><span class="n">puts</span><span class="p">(</span><span class="s2">&quot;There was a </span><span class="si">#{</span><span class="n">problem_type</span><span class="si">}</span><span class="s2"> on </span><span class="si">#{</span><span class="n">domain</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">page_type</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">page_id</span><span class="si">}</span><span class="s2"> linking to </span><span class="si">#{</span><span class="n">url</span><span class="si">}</span><span class="s2"> and </span><span class="si">#{</span><span class="n">email</span><span class="si">}</span><span class="s2"> was notified.&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">find_broken_link</span><span class="p">(</span><span class="n">original_site</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">admin_email</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">page_type</span><span class="p">)</span>
</span><span class='line'>  <span class="n">original_site</span><span class="o">.</span><span class="n">gsub!</span><span class="p">(</span><span class="sr">/gmu.local/</span><span class="p">,</span><span class="s1">&#39;gmu.edu&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">baseurl</span> <span class="o">=</span> <span class="n">organize_url</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">original_site</span><span class="p">)</span>
</span><span class='line'>  <span class="k">begin</span>
</span><span class='line'>    <span class="n">res</span> <span class="o">=</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTP</span><span class="o">.</span><span class="n">get_response</span><span class="p">(</span><span class="no">URI</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">baseurl</span><span class="p">))</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Code: </span><span class="si">#{</span><span class="n">res</span><span class="o">.</span><span class="n">code</span><span class="si">}</span><span class="s2"> for </span><span class="si">#{</span><span class="n">url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">notify_site</span><span class="p">(</span><span class="s2">&quot;404 error&quot;</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">original_site</span><span class="p">,</span> <span class="n">admin_email</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">page_type</span><span class="p">)</span> <span class="k">if</span> <span class="p">(</span><span class="n">res</span><span class="o">.</span><span class="n">code</span><span class="o">.</span><span class="n">to_i</span> <span class="o">==</span> <span class="mi">404</span><span class="p">)</span>
</span><span class='line'>  <span class="k">rescue</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Broken/bad link for </span><span class="si">#{</span><span class="n">url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">notify_site</span><span class="p">(</span><span class="s2">&quot;broken link error&quot;</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">original_site</span><span class="p">,</span> <span class="n">admin_email</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">page_type</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">release_the_dogs</span><span class="p">(</span><span class="n">admin_contact</span><span class="p">,</span> <span class="n">contact_message</span><span class="p">)</span>
</span><span class='line'>  <span class="no">BrokenLinkMailer</span><span class="o">.</span><span class="n">broken_link_notifier</span><span class="p">(</span><span class="n">admin_contact</span><span class="p">,</span> <span class="n">contact_message</span><span class="p">)</span><span class="o">.</span><span class="n">deliver</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="vi">@emaillist</span><span class="o">.</span><span class="n">each_key</span> <span class="k">do</span> <span class="o">|</span><span class="n">key</span><span class="o">|</span>
</span><span class='line'>  <span class="n">release_the_dogs</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="vi">@emaillist</span><span class="o">[</span><span class="n">key</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="vi">@events</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">e</span><span class="o">.</span><span class="n">url?</span>
</span><span class='line'>    <span class="n">find_broken_link</span><span class="p">(</span><span class="n">e</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">e</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">e</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">e</span><span class="o">.</span><span class="n">url</span><span class="p">,</span><span class="s2">&quot;events&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">long_desc_links</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">extract</span><span class="p">(</span><span class="n">e</span><span class="o">.</span><span class="n">long_description</span><span class="p">)</span><span class="o">.</span><span class="n">select!</span><span class="p">{</span><span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">v</span> <span class="o">=~</span> <span class="sr">/http/</span><span class="p">}</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">!</span><span class="n">long_desc_links</span><span class="o">.</span><span class="n">blank?</span>
</span><span class='line'>    <span class="n">long_desc_links</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">link</span><span class="o">|</span>
</span><span class='line'>      <span class="n">find_broken_link</span><span class="p">(</span><span class="n">e</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">e</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">e</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">link</span><span class="p">,</span><span class="s2">&quot;events&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="vi">@articles</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">a</span><span class="o">.</span><span class="n">url_link?</span>
</span><span class='line'>    <span class="n">find_broken_link</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">a</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">a</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">a</span><span class="o">.</span><span class="n">url_link</span><span class="p">,</span><span class="s2">&quot;articles&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">long_desc_links</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">extract</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">main_content</span><span class="p">)</span><span class="o">.</span><span class="n">select!</span><span class="p">{</span><span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">v</span> <span class="o">=~</span> <span class="sr">/http/</span><span class="p">}</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">!</span><span class="n">long_desc_links</span><span class="o">.</span><span class="n">blank?</span>
</span><span class='line'>    <span class="n">long_desc_links</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">link</span><span class="o">|</span>
</span><span class='line'>      <span class="n">find_broken_link</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">a</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">a</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">link</span><span class="p">,</span><span class="s2">&quot;articles&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="vi">@resources</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">r</span><span class="o">|</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">r</span><span class="o">.</span><span class="n">page_id?</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">r</span><span class="o">.</span><span class="n">url?</span>
</span><span class='line'>      <span class="n">find_broken_link</span><span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">r</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">r</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">r</span><span class="o">.</span><span class="n">url</span><span class="p">,</span><span class="s2">&quot;resources&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="vi">@emaillist</span><span class="o">.</span><span class="n">each_key</span> <span class="k">do</span> <span class="o">|</span><span class="n">key</span><span class="o">|</span>
</span><span class='line'>  <span class="n">release_the_dogs</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="vi">@emaillist</span><span class="o">[</span><span class="n">key</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="vi">@logfile</span><span class="o">.</span><span class="n">close</span>
</span></code></pre></td></tr></table></div></figure>


<p>Starting with the low hanging fruit:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="vi">@events</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>  <span class="vi">@articles</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>  <span class="vi">@resources</span> <span class="o">=</span> <span class="no">Resource</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'><span class="o">.</span>
</span><span class='line'><span class="o">.</span>
</span><span class='line'><span class="o">.</span>
</span><span class='line'>  <span class="vi">@events</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">e</span><span class="o">.</span><span class="n">url?</span>
</span><span class='line'>      <span class="n">find_broken_link</span><span class="p">(</span><span class="n">e</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">e</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">e</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">e</span><span class="o">.</span><span class="n">url</span><span class="p">,</span><span class="s2">&quot;events&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">long_desc_links</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">extract</span><span class="p">(</span><span class="n">e</span><span class="o">.</span><span class="n">long_description</span><span class="p">)</span><span class="o">.</span><span class="n">select!</span><span class="p">{</span><span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">v</span> <span class="o">=~</span> <span class="sr">/http/</span><span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">!</span><span class="n">long_desc_links</span><span class="o">.</span><span class="n">blank?</span>
</span><span class='line'>      <span class="n">long_desc_links</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">link</span><span class="o">|</span>
</span><span class='line'>        <span class="n">find_broken_link</span><span class="p">(</span><span class="n">e</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">e</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">e</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">link</span><span class="p">,</span><span class="s2">&quot;events&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="vi">@articles</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">a</span><span class="o">.</span><span class="n">url_link?</span>
</span><span class='line'>      <span class="n">find_broken_link</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">a</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">a</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">a</span><span class="o">.</span><span class="n">url_link</span><span class="p">,</span><span class="s2">&quot;articles&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">long_desc_links</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">extract</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">main_content</span><span class="p">)</span><span class="o">.</span><span class="n">select!</span><span class="p">{</span><span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">v</span> <span class="o">=~</span> <span class="sr">/http/</span><span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">!</span><span class="n">long_desc_links</span><span class="o">.</span><span class="n">blank?</span>
</span><span class='line'>      <span class="n">long_desc_links</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">link</span><span class="o">|</span>
</span><span class='line'>        <span class="n">find_broken_link</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">a</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">a</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">link</span><span class="p">,</span><span class="s2">&quot;articles&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="vi">@resources</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">r</span><span class="o">|</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">r</span><span class="o">.</span><span class="n">page_id?</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">r</span><span class="o">.</span><span class="n">url?</span>
</span><span class='line'>        <span class="n">find_broken_link</span><span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">r</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">r</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span><span class="n">r</span><span class="o">.</span><span class="n">url</span><span class="p">,</span><span class="s2">&quot;resources&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>I started by creating a scope in resources that checks for a <code>page_id</code> and a <code>url</code>. I also created some aliases for <code>url_link</code> and <code>main_content</code> to in my <code>Article</code> model in order to have parity with the <code>Event</code> and <code>Resource</code> model in order to get some uniformity.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@events</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">unlinked_events</span>
</span><span class='line'><span class="vi">@event_links</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">linked_events</span>
</span><span class='line'><span class="vi">@articles</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">unlinked_articles</span>
</span><span class='line'><span class="vi">@article_links</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">linked_articles</span>
</span><span class='line'><span class="vi">@resources</span> <span class="o">=</span> <span class="no">Resource</span><span class="o">.</span><span class="n">link_resources</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span><span class="vi">@event_links</span><span class="p">,</span> <span class="vi">@article_links</span><span class="p">,</span> <span class="vi">@resources</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">collection_item</span><span class="o">|</span>
</span><span class='line'>  <span class="n">collection_item</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class='line'>    <span class="n">find_broken_link</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">item</span><span class="o">.</span><span class="n">id</span><span class="p">,</span>
</span><span class='line'>                               <span class="n">item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span>
</span><span class='line'>                               <span class="n">item</span><span class="o">.</span><span class="n">url</span><span class="p">,</span><span class="n">item</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">downcase</span><span class="o">.</span><span class="n">pluralize</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span><span class="vi">@events</span><span class="p">,</span> <span class="vi">@articles</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">collection_item</span><span class="o">|</span>
</span><span class='line'>  <span class="n">collection_item</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class='line'>    <span class="n">long_desc_links</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">extract</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">long_description</span><span class="p">)</span><span class="o">.</span><span class="n">select!</span><span class="p">{</span><span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">v</span> <span class="o">=~</span> <span class="sr">/http/</span><span class="p">}</span>
</span><span class='line'>    <span class="k">unless</span> <span class="n">long_desc_links</span><span class="o">.</span><span class="n">blank?</span>
</span><span class='line'>      <span class="n">long_desc_links</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">link</span><span class="o">|</span>
</span><span class='line'>        <span class="n">find_broken_link</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span><span class="n">item</span><span class="o">.</span><span class="n">id</span><span class="p">,</span>
</span><span class='line'>                                   <span class="n">item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span>
</span><span class='line'>                                   <span class="n">link</span><span class="p">,</span><span class="n">item</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">downcase</span><span class="o">.</span><span class="n">pluralize</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Was passing too much stuff into <code>find_broken_link</code> so that was decomposed.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="vi">@event_links</span><span class="p">,</span> <span class="vi">@article_links</span><span class="p">,</span> <span class="vi">@resources</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">collection_item</span><span class="o">|</span>
</span><span class='line'>  <span class="n">collection_item</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class='line'>    <span class="n">find_broken_link</span><span class="p">(</span><span class="n">link_details</span><span class="p">(</span><span class="n">item</span><span class="p">))</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span><span class="vi">@events</span><span class="p">,</span> <span class="vi">@articles</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">collection_item</span><span class="o">|</span>
</span><span class='line'>  <span class="n">collection_item</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class='line'>    <span class="n">long_desc_links</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">extract</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">long_description</span><span class="p">)</span><span class="o">.</span><span class="n">select!</span><span class="p">{</span><span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">v</span> <span class="o">=~</span> <span class="sr">/http/</span><span class="p">}</span>
</span><span class='line'>    <span class="k">unless</span> <span class="n">long_desc_links</span><span class="o">.</span><span class="n">blank?</span>
</span><span class='line'>      <span class="n">long_desc_links</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">link</span><span class="o">|</span>
</span><span class='line'>        <span class="n">find_broken_link</span><span class="p">(</span><span class="n">link_details</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="n">link</span><span class="p">))</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#method for cleaning up the passed in stuff called inside find_broken_link:</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">link_details</span><span class="p">(</span><span class="n">link_item</span><span class="p">,</span> <span class="n">link</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="ss">:original_site</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:id</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">id</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:admin_email</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:url</span> <span class="o">=&gt;</span> <span class="n">link</span><span class="o">.</span><span class="n">nil?</span> <span class="p">?</span> <span class="n">link_item</span><span class="o">.</span><span class="n">url</span> <span class="p">:</span> <span class="n">link</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:page_type</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">downcase</span><span class="o">.</span><span class="n">pluralize</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nothing here really sped the task up so that was the next part. I&#8217;ve wanted to do something with Celluloid for a while so this seemed like a pretty good opportunity.</p>

<p>I broke it up into three files:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#checker.rb</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;celluloid/autostart&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;logger&#39;</span>
</span><span class='line'><span class="n">require_relative</span> <span class="s1">&#39;broken_link/link_cell&#39;</span>
</span><span class='line'><span class="n">require_relative</span> <span class="s1">&#39;broken_link/link_checker&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Checker</span>
</span><span class='line'>  <span class="no">DEFAULTS</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">default_protocol</span><span class="p">:</span>   <span class="s1">&#39;http://&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">pool_size</span><span class="p">:</span>          <span class="mi">25</span><span class="p">,</span>
</span><span class='line'>    <span class="n">logger_class</span><span class="p">:</span>       <span class="no">Logger</span><span class="p">,</span>
</span><span class='line'>    <span class="n">admin_email</span><span class="p">:</span>        <span class="s2">&quot;No Admin &lt;chssweb@gmu.edu&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">log_file_name</span><span class="p">:</span>      <span class="s2">&quot;bad_link_log.csv&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">linkcheck</span><span class="p">(</span><span class="n">opts</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>    <span class="n">link_check_results</span> <span class="o">=</span> <span class="no">LinkChecker</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">opts</span><span class="p">)</span>
</span><span class='line'>    <span class="n">link_check_results</span><span class="o">.</span><span class="n">agent_pool</span><span class="o">.</span><span class="n">future</span><span class="o">.</span><span class="n">terminate</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">link_check_results</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Checker</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">LinkChecker</span>
</span><span class='line'>    <span class="kp">attr_reader</span> <span class="ss">:agent_pool</span><span class="p">,</span> <span class="ss">:opts</span><span class="p">,</span> <span class="ss">:default_protocol</span><span class="p">,</span> <span class="ss">:output_file</span><span class="p">,</span> <span class="ss">:logger</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">override_opts</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>      <span class="vi">@opts</span>  <span class="o">=</span> <span class="no">DEFAULTS</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">override_opts</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@default_protocol</span> <span class="o">=</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:default_protocol</span><span class="o">]</span>
</span><span class='line'>      <span class="vi">@output_file</span> <span class="o">=</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:output_file</span><span class="o">]</span> <span class="o">||</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">opts</span><span class="o">[</span><span class="ss">:log_file_name</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@logger</span> <span class="o">=</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:logger_class</span><span class="o">].</span><span class="n">new</span><span class="p">(</span><span class="n">output_file</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@agent_pool</span> <span class="o">=</span> <span class="no">LinkCell</span><span class="o">.</span><span class="n">pool</span><span class="p">(</span><span class="n">size</span><span class="p">:</span> <span class="n">opts</span><span class="o">[</span><span class="ss">:pool_size</span><span class="o">]</span><span class="p">,</span> <span class="n">args</span><span class="p">:</span> <span class="o">[</span><span class="n">logger</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@events</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">unlinked_events</span>
</span><span class='line'>      <span class="vi">@event_links</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">linked_events</span>
</span><span class='line'>      <span class="vi">@articles</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">unlinked_articles</span>
</span><span class='line'>      <span class="vi">@article_links</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">linked_articles</span>
</span><span class='line'>      <span class="vi">@resources</span> <span class="o">=</span> <span class="no">Resource</span><span class="o">.</span><span class="n">linkable</span>
</span><span class='line'>      <span class="vi">@count</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>      <span class="n">check_embedded_links</span>
</span><span class='line'>      <span class="n">check_direct_links</span>
</span><span class='line'>      <span class="nb">self</span>
</span><span class='line'>    <span class="k">ensure</span>
</span><span class='line'>      <span class="n">output_file</span><span class="o">.</span><span class="n">close</span> <span class="k">if</span> <span class="n">output_file</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:close</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">check_direct_links</span>
</span><span class='line'>      <span class="o">[</span><span class="vi">@event_links</span><span class="p">,</span> <span class="vi">@article_links</span><span class="p">,</span> <span class="vi">@resources</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">collection_item</span><span class="o">|</span>
</span><span class='line'>        <span class="n">collection_item</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class='line'>          <span class="n">find_broken_link</span><span class="p">(</span><span class="n">link_details</span><span class="p">(</span><span class="n">item</span><span class="p">))</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">check_embedded_links</span>
</span><span class='line'>      <span class="o">[</span><span class="vi">@events</span><span class="p">,</span> <span class="vi">@articles</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">collection_item</span><span class="o">|</span>
</span><span class='line'>        <span class="n">collection_item</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class='line'>          <span class="n">long_desc_links</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">extract</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">long_description</span><span class="p">)</span><span class="o">.</span><span class="n">select!</span><span class="p">{</span><span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">v</span> <span class="o">=~</span> <span class="sr">/http/</span><span class="p">}</span>
</span><span class='line'>          <span class="k">unless</span> <span class="n">long_desc_links</span><span class="o">.</span><span class="n">blank?</span>
</span><span class='line'>            <span class="n">long_desc_links</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">link</span><span class="o">|</span>
</span><span class='line'>              <span class="n">find_broken_link</span><span class="p">(</span><span class="n">link_details</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="n">link</span><span class="p">))</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">link_details</span><span class="p">(</span><span class="n">link_item</span><span class="p">,</span> <span class="n">link</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>        <span class="ss">:original_site</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">domain</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:id</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">id</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:admin_email</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="o">.</span><span class="n">empty?</span> <span class="p">?</span> <span class="s2">&quot;No Admin &lt;chssweb@gmu.edu&gt;&quot;</span> <span class="p">:</span> <span class="n">link_item</span><span class="o">.</span><span class="n">originating_site</span><span class="o">.</span><span class="n">reporting_email</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:url</span> <span class="o">=&gt;</span> <span class="n">link</span><span class="o">.</span><span class="n">nil?</span> <span class="p">?</span> <span class="n">link_item</span><span class="o">.</span><span class="n">url</span> <span class="p">:</span> <span class="n">link</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:page_type</span> <span class="o">=&gt;</span> <span class="n">link_item</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">downcase</span><span class="o">.</span><span class="n">pluralize</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">find_broken_link</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class='line'>      <span class="n">agent_pool</span><span class="o">.</span><span class="n">future</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Checker</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">LinkCell</span>
</span><span class='line'>    <span class="kp">include</span> <span class="no">Celluloid</span>
</span><span class='line'>
</span><span class='line'>    <span class="kp">attr_reader</span> <span class="ss">:logger</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">logger</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@logger</span> <span class="o">=</span> <span class="n">logger</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">organize_url</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">originating_site_domain</span><span class="p">)</span>
</span><span class='line'>      <span class="n">url</span><span class="o">.</span><span class="n">gsub!</span><span class="p">(</span><span class="sr">/gmu.local/</span><span class="p">,</span><span class="s1">&#39;gmu.edu&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">url</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">originating_site_domain</span><span class="p">)</span> <span class="k">if</span> <span class="n">url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/^\//</span><span class="p">)</span>
</span><span class='line'>      <span class="n">url</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;http://&quot;</span><span class="p">)</span> <span class="k">unless</span> <span class="p">(((</span><span class="n">url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/^http\:\/\//</span><span class="p">))</span> <span class="ow">or</span> <span class="p">(</span><span class="n">url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/^https\:\/\//</span><span class="p">)))</span> <span class="o">||</span> <span class="n">url</span><span class="o">.</span><span class="n">empty?</span><span class="p">)</span>
</span><span class='line'>      <span class="n">url</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="n">url</span><span class="p">)</span> <span class="k">if</span> <span class="p">(</span><span class="n">url</span> <span class="o">=~</span> <span class="no">URI</span><span class="o">::</span><span class="no">DEFAULT_PARSER</span><span class="o">.</span><span class="n">regexp</span><span class="o">[</span><span class="ss">:ABS_URI</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">url</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="n">link</span><span class="p">)</span>
</span><span class='line'>      <span class="n">site</span> <span class="o">=</span> <span class="n">link</span><span class="o">[</span><span class="ss">:original_site</span><span class="o">]</span>
</span><span class='line'>      <span class="n">site</span><span class="o">.</span><span class="n">gsub!</span><span class="p">(</span><span class="sr">/gmu.local/</span><span class="p">,</span><span class="s1">&#39;gmu.edu&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">if</span> <span class="n">organize_url</span><span class="p">(</span><span class="n">link</span><span class="o">[</span><span class="ss">:url</span><span class="o">]</span><span class="p">,</span><span class="n">site</span><span class="p">)</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>      <span class="n">baseurl</span> <span class="o">=</span> <span class="n">organize_url</span><span class="p">(</span><span class="n">link</span><span class="o">[</span><span class="ss">:url</span><span class="o">]</span><span class="p">,</span><span class="n">site</span><span class="p">)</span>
</span><span class='line'>      <span class="k">begin</span>
</span><span class='line'>        <span class="n">res</span> <span class="o">=</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTP</span><span class="o">.</span><span class="n">get_response</span><span class="p">(</span><span class="no">URI</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">baseurl</span><span class="p">))</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;Code: </span><span class="si">#{</span><span class="n">res</span><span class="o">.</span><span class="n">code</span><span class="si">}</span><span class="s2"> for </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:url</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>        <span class="n">logger</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;404 error, </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:original_site</span><span class="o">]</span><span class="si">}</span><span class="s2">, \</span>
</span><span class='line'><span class="s2">                  </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:admin_email</span><span class="o">]</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:url</span><span class="o">]</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:page_type</span><span class="o">]</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span> <span class="k">if</span> <span class="p">(</span><span class="n">res</span><span class="o">.</span><span class="n">code</span><span class="o">.</span><span class="n">to_i</span> <span class="o">==</span> <span class="mi">404</span><span class="p">)</span>
</span><span class='line'>      <span class="k">rescue</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;Broken/bad link for </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:url</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>        <span class="n">logger</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;Broken link error, </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:original_site</span><span class="o">]</span><span class="si">}</span><span class="s2">, \</span>
</span><span class='line'><span class="s2">                  </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:admin_email</span><span class="o">]</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:url</span><span class="o">]</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="n">link</span><span class="o">[</span><span class="ss">:page_type</span><span class="o">]</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Lots more refactoring to come on this&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Model Objects Caching]]></title>
    <link href="http://Poignantcode.com/blog/2014/03/23/model-objects-caching/"/>
    <updated>2014-03-23T20:19:00-04:00</updated>
    <id>http://Poignantcode.com/blog/2014/03/23/model-objects-caching</id>
    <content type="html"><![CDATA[<p>At a recent <a href="arlingtonruby.org">meetup</a> I was explaining the benefits of caching model objects and how it can help performance by reducing calls to your database. I was only able to give contrived examples at the time but I thought that since I recently had a use case that fell into this neighborhood I thought I&#8217;d share. I&#8217;ll note that Rails will, by default, write to the file system but for optimal performance you&#8217;ll want to use a memory based store like <a href="http://memcached.org/">memcached</a> or <a href="http://redis.io/">redis</a>.</p>

<p>If you open up a Rails console and access information from your database you can see the time it spends looking up that information. For example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&gt;&gt;</span> <span class="no">Article</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="mi">6616</span><span class="p">)</span><span class="o">.</span><span class="n">title</span>
</span><span class='line'>  <span class="no">Article</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">5</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="sb">`articles`</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="sb">`articles`</span> <span class="no">WHERE</span> <span class="sb">`articles`</span><span class="o">.</span><span class="n">`</span><span class="nb">id</span><span class="sb">` = 6616 LIMIT 1</span>
</span><span class='line'><span class="sb">&quot;The ‘Wow’ Factor: Mason Econ Major Interns at White House&quot;</span>
</span><span class='line'><span class="sb">&gt;&gt; Article.find(6616).title</span>
</span><span class='line'><span class="sb">  Article Load (0.4ms)  SELECT `</span><span class="n">articles</span><span class="sb">`.* FROM `</span><span class="n">articles</span><span class="sb">` WHERE `</span><span class="n">articles</span><span class="sb">`.`</span><span class="nb">id</span><span class="sb">` = 6616 LIMIT 1</span>
</span><span class='line'><span class="sb">&quot;The ‘Wow’ Factor: Mason Econ Major Interns at White House&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>I picked an article number and did a query of its title and see that it was a 0.5 and 0.4ms call on the database. The database I am working with locally is quite small and the query isn&#8217;t very complex. Regardless, with caching we can remove database calls from the equation. Caching works like a hash with a key and a value. The syntax is <code>Rails.cache.write('key', value)</code> and then <code>Rails.cache.read('key')</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&gt;&gt;</span> <span class="no">Rails</span><span class="o">.</span><span class="n">cache</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s1">&#39;ArticleTitle&#39;</span><span class="p">,</span><span class="no">Article</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="mi">6616</span><span class="p">)</span><span class="o">.</span><span class="n">title</span><span class="p">)</span>
</span><span class='line'>  <span class="no">Article</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">4</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="sb">`articles`</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="sb">`articles`</span> <span class="no">WHERE</span> <span class="sb">`articles`</span><span class="o">.</span><span class="n">`</span><span class="nb">id</span><span class="sb">` = 6616 LIMIT 1</span>
</span><span class='line'><span class="sb">true</span>
</span><span class='line'><span class="sb">&gt;&gt; Rails.cache.read(&#39;ArticleTitle&#39;)</span>
</span><span class='line'><span class="sb">&quot;The ‘Wow’ Factor: Mason Econ Major Interns at White House&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>With the read action there is no database call. Caching also supports expiring the cache, versioning it, giving it a time to live and so on. More infomation can be found in <a href="http://guides.rubyonrails.org/caching_with_rails.html">the Rails guides</a>.</p>

<p>Aside from reading and writing, you can also perform a fetch which will read the result that is stored in the cache and if there is nothing there it will create the cache by performing the passed in block.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&gt;&gt;</span> <span class="no">Rails</span><span class="o">.</span><span class="n">cache</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="s1">&#39;ArticleTitle&#39;</span><span class="p">)</span> <span class="p">{</span><span class="no">Article</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="mi">6616</span><span class="p">)</span><span class="o">.</span><span class="n">title</span><span class="p">}</span>
</span><span class='line'>  <span class="no">Article</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">4</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="sb">`articles`</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="sb">`articles`</span> <span class="no">WHERE</span> <span class="sb">`articles`</span><span class="o">.</span><span class="n">`</span><span class="nb">id</span><span class="sb">` = 6616 LIMIT 1</span>
</span><span class='line'><span class="sb">&quot;The ‘Wow’ Factor: Mason Econ Major Interns at White House&quot;</span>
</span><span class='line'><span class="sb">&gt;&gt; Rails.cache.fetch(&#39;ArticleTitle&#39;) {Article.find(6616).title}</span>
</span><span class='line'><span class="sb">&quot;The ‘Wow’ Factor: Mason Econ Major Interns at White House&quot;</span>
</span><span class='line'><span class="sb">&gt;&gt; Rails.cache.fetch(&#39;ArticleTitle&#39;) {Article.find(6616).title}</span>
</span><span class='line'><span class="sb">&quot;The ‘Wow’ Factor: Mason Econ Major Interns at White House&quot;</span>
</span><span class='line'><span class="sb">&gt;&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>We see that the first time we attempted to fetch the <code>ArticleTitle</code> it didn&#8217;t exist so it made a database query but on each subsequent fetch there was no database call.</p>

<p>The use case that occurred recently was that our site at work has become a target for hackers. We&#8217;re using the fantastic <a href="https://github.com/kickstarter/rack-attack]%20from%20Kickstarter%20to%20block%20ip%20addresses.%20We%20subscribe%20to%20a%20central%20list%20of%20IP%20addresses%20to%20block%20(numbering%20in%20the%20thousands">rack attack gem</a> that I created a cron job to poll daily and update the list by removing ip addresses that are no longer on the list and adding any new ones to the list. I created a <code>Blacklist</code> table in the database with the following cache actions:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Blacklist</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:ip_address</span>
</span><span class='line'>  <span class="n">after_commit</span> <span class="ss">:clear_blacklisted_ips</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">blacklisted_ips</span>
</span><span class='line'>    <span class="no">Rails</span><span class="o">.</span><span class="n">cache</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="o">[</span><span class="nb">self</span><span class="p">,</span> <span class="s2">&quot;blacklist&quot;</span><span class="o">]</span><span class="p">)</span> <span class="p">{</span> <span class="no">Blacklist</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">collect</span> <span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span><span class="o">.</span><span class="n">ip_address</span><span class="p">}}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">clear_blacklisted_ips</span>
</span><span class='line'>    <span class="no">Rails</span><span class="o">.</span><span class="n">cache</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="o">[</span><span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="s2">&quot;blacklist&quot;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>So I am creating a <code>blacklisted_ips</code> that doesn&#8217;t expire unless the <code>after_commit</code> gets called by the blacklist table being changed. If the table is changed, I delete the cache so the most recent list of ips is in the cache. For reference, here is my rack attack initializer <code>rack_attack.rb</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rack</span><span class="o">::</span><span class="no">Attack</span><span class="o">.</span><span class="n">blacklist</span><span class="p">(</span><span class="s1">&#39;block dinks&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">req</span><span class="o">|</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">Blacklist</span><span class="o">.</span><span class="n">blacklisted_ips</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">req</span><span class="o">.</span><span class="n">ip</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>I know, pretty basic eh?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intro to DevOps]]></title>
    <link href="http://Poignantcode.com/blog/2014/01/06/intro-to-devops/"/>
    <updated>2014-01-06T11:26:00-05:00</updated>
    <id>http://Poignantcode.com/blog/2014/01/06/intro-to-devops</id>
    <content type="html"><![CDATA[<p><strong>Update</strong>:
I gave this talk at the <a href="http://www.meetup.com/dcruby/events/101392262/">DC Ruby Users Group</a> and was asked which of the following solutions I chose and why. I chose Chef for provisioning and configuring servers mostly because I have friends in the Chef community but if I were to choose again, I would likely use Ansible as Chef is more power than I need since we only have three servers. I chose Capistrano for deployment because I&#8217;ve used it in the past and found it dead simple to use. For Continuous Integration I went with cruisecontrol.rb mostly because it is written in ruby and easy to <a href="http://poignantcode.com/blog/2012/10/24/ci-servers-for-fun-and-profit/">configure</a>. I use Airbrake for errors (but am looking into honeybadger) and monitoring with New Relic. I don&#8217;t aggregate my logs or monitor my servers other than what New Relic and Airbrake give mostly because it didn&#8217;t make sense with the small architecture we have. <strong>End Update</strong></p>

<h3></h3>

<p>We used manage hosting at work and when we recently scaled out our architecture we found that at our host, despite us having a single application, increased the prices proportionally with the number of servers. We understand that each additional server costs an additional fee but there was no break on support costs. We know that they, like a lot of companies, use AWS for infrastructure and so we are able to price out what our instances cost and saw that we were paying a premium of approximately $150 a month for the insurance of being able to call someone up in case of trouble or if we are having any issues. The problem and what we couldn&#8217;t justify the extra expense for was that the premium is levied on each server so having 2 application servers rather than one which would not double the number of support calls or use of their services would still double our support costs. While we have avoided having a DevOps team ourselves it finally made sense to learn the tools. I was surprising how easy and &#8220;rubylike&#8221; many of them were. I decided to share what I learned because we have recently had members of the meet-up group I help organize asking what exactly DevOps is.</p>

<!-- more -->


<h2>What is DevOps?</h2>

<p>You hear a lot of people talk about DevOps but generally they are saying things like Chef, Puppet, Nagios and so forth. While those are all components of DevOps, I did some looking and the best description I could find was &#8220;System administrators participating in an agile development process alongside developers and using many of the same agile techniques for their systems work.&#8221; I&#8217;m assuming if you are reading this you are a developer who was tasked with becoming their companies DevOps person.</p>

<h2>What are the required skills needed for DevOps?</h2>

<p>I found this to be a pretty difficult question to answer and it made sense to differentiate between technical and non-technical skills.</p>

<p>Assuming you are developer and have those skills covered, you will need to do a deep dive into system administration and all the requisite unix skills. While the list of unix skills is quite expansive (grep, sed, cat, chmod, du, shell scripting, TCP/IP networking, DNS, mail, virtualization, and so on) the two books I own that are excellent reference manuals are:</p>

<p><img src="http://Poignantcode.com/images/sysadmin1.jpg"></p>

<p>and</p>

<p><img src="http://Poignantcode.com/images/sysadmin2.jpg"></p>

<h2>Responsibilities of DevOps</h2>

<p>As the DevOps person, these are the things you are going to want to think about:
* provisioning virtual machines
* configuring network devices and servers
* deploying you applications
* collecting logs
* monitoring applications
* monitoring your hardware
* monitoring application performance
<strong>You want to automate everything</strong></p>

<h3>Provisioning and Configuring Servers</h3>

<ul>
<li>Chef</li>
<li>Ansible</li>
<li>Puppet</li>
<li>Shell Scripts</li>
<li>Manual</li>
</ul>


<p>Chef, Ansible and Puppet all work in a similar fashion. You write recipes, manifests or playbooks so you can repeat the same actions over and over. Repeatability is paramount as you want to be able create an identical environment every time you spin up a server. This helps in consistency and ensures that you will be able to easily identify and track down errors. If each server is configured differently you might mistake a configuration conflict with a an application error. You will need to pick a cloud provider like AWS, Rackspace or Digital Ocean as a place for deploying your servers to.</p>

<h3>Deploying your Application</h3>

<p>Part of the deployment process and something that is under the purview of DevOps is the deployment process. An example deployment process might look something like this:</p>

<ol>
<li>Continuous Integration shows all tests are passing.</li>
<li>Deploy the Application to your testing environment.</li>
<li>QA tests the Application and approves deployment.</li>
<li>Deploy the Application to production.</li>
</ol>


<p>All the steps in there are monitored by DevOps. DevOps monitors and configures your CI server, spins up testing environments and deploys to that environment and then deploys to production.</p>

<p>There are several good choices for CI, some of the popular choices are:</p>

<ul>
<li>Jenkins</li>
<li>Travis</li>
<li>CruiseControl</li>
</ul>


<p>There are also numerous options for deploying your application such as:</p>

<ul>
<li>Capistrano</li>
<li>Fabric</li>
<li>Shell Scripts</li>
</ul>


<p>It is possible to your provisioning tool (like Chef) to also handle the deploying of your application but personally I like the separation of responsibilities.</p>

<h3>Log Collection</h3>

<p>Having all your server logs in one place is extremely valuable especially when you are trying to track down errors. You will want to brush up on your Unix commands like grep to make searching and parsing these logs easy. A couple of popular logging applications are:</p>

<ul>
<li>Loggly</li>
<li>LogStash</li>
</ul>


<h3>Monitoring Applications</h3>

<p>Monitoring and application performance tools go hand in hand since you typically monitor for performance uptime. In the Ruby/Rails community the two most popular error monitoring services that will let you know when exceptions have occurred are:</p>

<ul>
<li>Airbrake</li>
<li>Honeybadger</li>
</ul>


<p>For monitoring things like how fast pages are loading, which pages are problem pages, CPU usage, memory and so on, the two most popular performance monitoring tools are:</p>

<ul>
<li>New Relic</li>
<li>Scout</li>
</ul>


<h3>Monitoring your Hardware/Servers</h3>

<p>You will want to monitor that unix services are running (ssh, mail, pop, http) in addition to seeing if a server, load balancer or db server is down. Good monitoring tools will also be customizable to show how much space is left on a give server in a given directory, monitor your databases and how long a connect takes as well as the lag time to the slave dbs. Monitoring software is also configurable to send alerts that you can customize for each of these things. The most popular hardware monitoring software is:</p>

<ul>
<li>Nagios</li>
<li>Icinga</li>
<li>Sensu</li>
<li>Zabbix</li>
</ul>


<h2>Non Technical Skills</h2>

<p>DevOps also needs to be aware of what the business side is doing. A good read on more about this can be had with the following book:</p>

<p><img src="http://Poignantcode.com/images/phoenixproject.png"></p>

<p>Two especially important areas for DevOps to work in conjunction with are:</p>

<ul>
<li>Sales</li>
<li>Marketing</li>
</ul>


<p>If it isn&#8217;t apparent why, just imagine if a marketing team were to run a series of advertisements; perhaps at an event like the Superbowl where your application will be heard about by millions and then get swamped with traffic afterwards. If you are aware of the coming traffic you can spin up extra servers to handle the traffic so your customers are not left dissatisfied. A similar story is easy to imagine with sales. If your sales team is promising features to clients, as DevOps you need to be aware of that so you can ensure you have environments for QA to test and to be sure that the features go through the full testing process.</p>

<h3>Maintenance</h3>

<p>I’ve included maintenance in here because you are going to have to deal with budget/finance people. If you are paying for a support contract with new relic or airbrake or you want to start paying for a different service of some sort. The money people tend to want to know about these contracts, how long they will last, how much they will cost and so on. The other part of maintenance, such as updating and patching software often can take a LOT of time. If the DevOps team is planning to upgrade/patch/change from ubuntu 10.04 to 13.04 because 10.04 doesn’t fully support a new feature you want to add you might be looking at a multi day or event week process as you upgrade everything. People will need to know that devops will be out of commission or devoting a lot of time to it.</p>

<h2>Benefits</h2>

<p>Assuming you have done all the DevOps things correctly the benefits you are looking at are:</p>

<ul>
<li>Faster and easier deployments</li>
<li>Easier to roll back from mistakes</li>
<li>Less Problems to fix</li>
<li>Less time spent fixing things and more time developing</li>
<li>Faster roll out of features</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Irssi Setup]]></title>
    <link href="http://Poignantcode.com/blog/2013/08/28/my-irssi-setup/"/>
    <updated>2013-08-28T23:00:00-04:00</updated>
    <id>http://Poignantcode.com/blog/2013/08/28/my-irssi-setup</id>
    <content type="html"><![CDATA[<p>I&#8217;m always surprised by my vim and emacs friends when they tell me they use an irc client like <a href="http://www.codeux.com/textual/">textual</a>. Don&#8217;t get me wrong, it is an amazing client but if you are a command line advocate I think you need to check out <a href="http://www.irssi.org/">Irssi</a>.</p>

<p>Irssi&#8217;s big win for me is that you can use a terminal multiplexer like <a href="http://www.gnu.org/software/screen/">Screen</a> or <a href="http://tmux.sourceforge.net/">tmux</a> and set your session up on a server and then you can just ssh into your server and reattach your session. So you never have to miss out on any conversations or cat pictures.</p>

<p>Much like vim or emacs the great thing about <code>irssi</code> is how customizable it is. On the official irssi site there is a list of <a href="http://scripts.irssi.org/">scripts/plugins</a> you can install to make it your own. A quick Github search will also yield a lot of people&#8217;s plugins that they have created that you can further experiment with. Or, like any other piece of open source software, you can always create your own.</p>

<p>Here are the scripts I routinely use:</p>

<ul>
<li><code>adv_windowlist.pl</code> - This allows you to customize your irssi window, much like the vim powerline plugin. I customize my irssi with the following:

<ul>
<li><code>/set awl_display_key $Q%K|%n$H$C$S</code> - This makes each of the irc windows look more ircish by adding an octothorpe before each channel name.</li>
<li><code>/set awl_display_key_active $Q%K|%n$H%U$C$S%n</code> - This makes the active window underlined so I know who I&#8217;m talking to.</li>
</ul>
</li>
<li><code>nickcolor.pl</code> - This colourizes the names of everyone in the channel. It makes it easier to separate out who is saying what.</li>
<li><code>nicklist.pl</code> - Adds a display of who is in the channel. You activate it with:

<ul>
<li><code>/NICKLIST SCREEN</code> - This assumes you are using screen rather than tmux.</li>
</ul>
</li>
<li><code>usercount.pl</code> - Adds a count of how many people are in the channel into the powerline. You activate it with:

<ul>
<li><code>/statusbar window add usercount</code></li>
</ul>
</li>
</ul>


<p>All scripts should be put in the <code>~/.irssi/scripts/autorun</code> if you want them auto loaded when you open irssi or in <code>~/.irssi/scripts</code> if you want to manually load them. To manually load a script you just type: <code>/script load nickcolor.pl</code></p>

<p>I also take advantage of a lot of irssi&#8217;s built in functionality like hilight, log, ignore and so forth. The <a href="http://quadpoint.org/articles/irssi/">irssi manual</a> gives a lot of information on customizing irssi.</p>

<p>When you are finished you are left with something like this:</p>

<p><img src="http://Poignantcode.com/images/terminal.png" title="irssi" alt="irssi"></p>

<p>All the scripts I mention here are available in my <a href="https://github.com/SeanMarcia/irssi">irssi github repo</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Controller Clean-up]]></title>
    <link href="http://Poignantcode.com/blog/2013/08/14/controller-clean-up/"/>
    <updated>2013-08-14T14:06:00-04:00</updated>
    <id>http://Poignantcode.com/blog/2013/08/14/controller-clean-up</id>
    <content type="html"><![CDATA[<p>We all have those files that work but are ugly and we don&#8217;t want to refactor. Or as the quote goes <code>Broken code gets fixed but bad code sticks around forever.</code></p>

<p>I had an ugly controller that worked so I was content to leave it and focus on other things. However, when I was going through the codebase and updating all the old <code>find</code> syntax to the newer <code>where</code> syntax and I realized I couldn&#8217;t avoid this controller anymore.</p>

<p>Here is the controller:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CourseSectionsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="c1"># GET /sections</span>
</span><span class='line'>  <span class="c1"># GET /sections.xml</span>
</span><span class='line'>  <span class="n">before_filter</span> <span class="ss">:find_course</span><span class="p">,</span> <span class="ss">:except</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:index</span><span class="p">,</span> <span class="ss">:distance</span><span class="o">]</span>
</span><span class='line'>  <span class="n">before_filter</span> <span class="ss">:determine_section</span><span class="p">,</span> <span class="ss">:only</span> <span class="o">=&gt;</span> <span class="ss">:index</span>
</span><span class='line'>  <span class="c1"># caches_action :index, :cache_path =&gt; Proc.new { |c| c.params }</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="k">if</span> <span class="no">CourseCode</span><span class="o">.</span><span class="n">on_site</span><span class="p">(</span><span class="n">current_site</span><span class="p">)</span><span class="o">.</span><span class="n">blank?</span>
</span><span class='line'>      <span class="n">params</span><span class="o">[</span><span class="ss">:code</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;chss&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="vi">@selected_term</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:term</span><span class="o">].</span><span class="n">blank?</span> <span class="p">?</span> <span class="n">current_term</span> <span class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:term</span><span class="o">]</span>
</span><span class='line'>    <span class="vi">@current_code</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:code</span><span class="o">].</span><span class="n">nil?</span> <span class="p">?</span> <span class="no">CourseCode</span><span class="o">.</span><span class="n">on_site</span><span class="p">(</span><span class="n">current_site</span><span class="p">)</span><span class="o">.</span><span class="n">by_code</span><span class="o">.</span><span class="n">first</span> <span class="p">:</span> <span class="no">CourseCode</span><span class="o">.</span><span class="n">on_site</span><span class="p">(</span><span class="n">current_site</span><span class="p">)</span><span class="o">.</span><span class="n">find_by_code</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:code</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="vi">@current_code</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>      <span class="c1"># throw a 404</span>
</span><span class='line'>      <span class="vi">@course</span> <span class="o">=</span> <span class="no">Course</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>
</span><span class='line'>      <span class="vi">@undergraduate_courses</span> <span class="o">=</span> <span class="no">Course</span><span class="o">.</span><span class="n">offered_in</span><span class="p">(</span><span class="vi">@selected_term</span><span class="p">)</span><span class="o">.</span><span class="n">undergraduate</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="ss">:all</span><span class="p">,</span> <span class="ss">:conditions</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;course_code_id = ?&quot;</span><span class="p">,</span> <span class="vi">@current_code</span><span class="o">.</span><span class="n">id</span><span class="o">]</span><span class="p">,</span> <span class="ss">:order</span> <span class="o">=&gt;</span> <span class="ss">:course_number</span><span class="p">,</span> <span class="ss">:group</span> <span class="o">=&gt;</span> <span class="ss">:course_number</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@undergraduate_course_levels</span> <span class="o">=</span> <span class="vi">@undergraduate_courses</span><span class="o">.</span><span class="n">group_by</span> <span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">t</span><span class="o">.</span><span class="n">course_level</span> <span class="p">}</span>
</span><span class='line'>      <span class="vi">@undergraduate_special_topics</span> <span class="o">=</span> <span class="no">Course</span><span class="o">.</span><span class="n">undergraduate</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="ss">:all</span><span class="p">,</span> <span class="ss">:conditions</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;course_code_id = ? AND special_topic = ?&quot;</span><span class="p">,</span> <span class="vi">@current_code</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="kp">true</span><span class="o">]</span><span class="p">,</span> <span class="ss">:order</span> <span class="o">=&gt;</span> <span class="ss">:course_number</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="vi">@graduate_courses</span> <span class="o">=</span> <span class="no">Course</span><span class="o">.</span><span class="n">offered_in</span><span class="p">(</span><span class="vi">@selected_term</span><span class="p">)</span><span class="o">.</span><span class="n">graduate</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="ss">:all</span><span class="p">,</span> <span class="ss">:conditions</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;course_code_id = ?&quot;</span><span class="p">,</span> <span class="vi">@current_code</span><span class="o">.</span><span class="n">id</span><span class="o">]</span><span class="p">,</span> <span class="ss">:order</span> <span class="o">=&gt;</span> <span class="ss">:course_number</span><span class="p">,</span> <span class="ss">:group</span> <span class="o">=&gt;</span> <span class="ss">:course_number</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@graduate_course_levels</span> <span class="o">=</span> <span class="vi">@graduate_courses</span><span class="o">.</span><span class="n">group_by</span> <span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">t</span><span class="o">.</span><span class="n">course_level</span> <span class="p">}</span>
</span><span class='line'>      <span class="vi">@graduate_special_topics</span> <span class="o">=</span> <span class="no">Course</span><span class="o">.</span><span class="n">graduate</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="ss">:all</span><span class="p">,</span> <span class="ss">:conditions</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;course_code_id = ? AND special_topic = ?&quot;</span><span class="p">,</span> <span class="vi">@current_code</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="kp">true</span><span class="o">]</span><span class="p">,</span> <span class="ss">:order</span> <span class="o">=&gt;</span> <span class="ss">:course_number</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="c1"># index.html.erb</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">xml</span>  <span class="p">{</span> <span class="n">render</span> <span class="ss">:xml</span> <span class="o">=&gt;</span> <span class="vi">@courses</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="k">rescue</span> <span class="c1">#ActiveRecord::RecordNotFound</span>
</span><span class='line'>      <span class="n">render</span> <span class="ss">:template</span> <span class="o">=&gt;</span> <span class="s2">&quot;shared/404.html.erb&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># GET /sections/1</span>
</span><span class='line'>  <span class="c1"># GET /sections/1.xml</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>    <span class="vi">@course_section</span> <span class="o">=</span> <span class="no">CourseSection</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">,</span> <span class="ss">:include</span> <span class="o">=&gt;</span> <span class="ss">:person</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="c1"># show.html.erb</span>
</span><span class='line'>      <span class="nb">format</span><span class="o">.</span><span class="n">xml</span>  <span class="p">{</span> <span class="n">render</span> <span class="ss">:xml</span> <span class="o">=&gt;</span> <span class="vi">@section</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="k">rescue</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">RecordNotFound</span>
</span><span class='line'>      <span class="n">render</span> <span class="ss">:template</span> <span class="o">=&gt;</span> <span class="s2">&quot;shared/404.html.erb&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">find_course</span>
</span><span class='line'>    <span class="vi">@course</span> <span class="o">=</span> <span class="no">Course</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:course_id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">determine_section</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Lots going on there, and a lot going on that isn&#8217;t needed. The first task it to convert the finder syntax.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@undergraduate_courses</span> <span class="o">=</span> <span class="no">Course</span><span class="o">.</span><span class="n">offered_in</span><span class="p">(</span><span class="vi">@selected_term</span><span class="p">)</span><span class="o">.</span><span class="n">undergraduate</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;course_code_id = ?&quot;</span><span class="p">,</span> <span class="vi">@current_code</span><span class="o">.</span><span class="n">id</span><span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="ss">:course_number</span><span class="p">)</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="ss">:course_number</span><span class="p">)</span>
</span><span class='line'><span class="vi">@undergraduate_course_levels</span> <span class="o">=</span> <span class="vi">@undergraduate_courses</span><span class="o">.</span><span class="n">group_by</span> <span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">t</span><span class="o">.</span><span class="n">course_level</span> <span class="p">}</span>
</span><span class='line'><span class="vi">@undergraduate_special_topics</span> <span class="o">=</span> <span class="no">Course</span><span class="o">.</span><span class="n">undergraduate</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;course_code_id = ? AND special_topic = ?&quot;</span><span class="p">,</span> <span class="vi">@current_code</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="kp">true</span><span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="ss">:course_number</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="vi">@graduate_courses</span> <span class="o">=</span> <span class="no">Course</span><span class="o">.</span><span class="n">offered_in</span><span class="p">(</span><span class="vi">@selected_term</span><span class="p">)</span><span class="o">.</span><span class="n">graduate</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;course_code_id = ?&quot;</span><span class="p">,</span> <span class="vi">@current_code</span><span class="o">.</span><span class="n">id</span><span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="ss">:course_number</span><span class="p">)</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="ss">:course_number</span><span class="p">)</span>
</span><span class='line'><span class="vi">@graduate_course_levels</span> <span class="o">=</span> <span class="vi">@graduate_courses</span><span class="o">.</span><span class="n">group_by</span> <span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">t</span><span class="o">.</span><span class="n">course_level</span> <span class="p">}</span>
</span><span class='line'><span class="vi">@graduate_special_topics</span> <span class="o">=</span> <span class="no">Course</span><span class="o">.</span><span class="n">graduate</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;course_code_id = ? AND special_topic = ?&quot;</span><span class="p">,</span> <span class="vi">@current_code</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="kp">true</span><span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="ss">:course_number</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reading the code over there is a lot that can be trimmed out. Plus since each of the controller is doing an identical rescue we can compact those into a <code>rescue_from</code> action. After clean up our file is about half the size:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CourseSectionsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">rescue_from</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">RecordNotFound</span><span class="p">,</span> <span class="n">with</span><span class="p">:</span> <span class="ss">:record_not_found</span>
</span><span class='line'>  <span class="n">before_filter</span> <span class="ss">:find_course</span><span class="p">,</span> <span class="ss">:except</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:index</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="k">if</span> <span class="no">CourseCode</span><span class="o">.</span><span class="n">on_site</span><span class="p">(</span><span class="n">current_site</span><span class="p">)</span><span class="o">.</span><span class="n">blank?</span>
</span><span class='line'>      <span class="n">params</span><span class="o">[</span><span class="ss">:code</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;chss&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="vi">@selected_term</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:term</span><span class="o">].</span><span class="n">blank?</span> <span class="p">?</span> <span class="n">current_term</span> <span class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:term</span><span class="o">]</span>
</span><span class='line'>    <span class="vi">@current_code</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:code</span><span class="o">].</span><span class="n">nil?</span> <span class="p">?</span> <span class="no">CourseCode</span><span class="o">.</span><span class="n">on_site</span><span class="p">(</span><span class="n">current_site</span><span class="p">)</span><span class="o">.</span><span class="n">by_code</span><span class="o">.</span><span class="n">first</span> <span class="p">:</span> <span class="no">CourseCode</span><span class="o">.</span><span class="n">on_site</span><span class="p">(</span><span class="n">current_site</span><span class="p">)</span><span class="o">.</span><span class="n">find_by_code</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:code</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="vi">@current_code</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>      <span class="c1"># throw a 404</span>
</span><span class='line'>      <span class="vi">@course</span> <span class="o">=</span> <span class="no">Course</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="vi">@undergraduate_courses</span> <span class="o">=</span> <span class="no">Course</span><span class="o">.</span><span class="n">offered_in</span><span class="p">(</span><span class="vi">@selected_term</span><span class="p">)</span><span class="o">.</span><span class="n">undergraduate</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;course_code_id = ?&quot;</span><span class="p">,</span> <span class="vi">@current_code</span><span class="o">.</span><span class="n">id</span><span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="ss">:course_number</span><span class="p">)</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="ss">:course_number</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@undergraduate_course_levels</span> <span class="o">=</span> <span class="vi">@undergraduate_courses</span><span class="o">.</span><span class="n">group_by</span> <span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">t</span><span class="o">.</span><span class="n">course_level</span> <span class="p">}</span>
</span><span class='line'>      <span class="vi">@undergraduate_special_topics</span> <span class="o">=</span> <span class="no">Course</span><span class="o">.</span><span class="n">undergraduate</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;course_code_id = ? AND special_topic = ?&quot;</span><span class="p">,</span> <span class="vi">@current_code</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="kp">true</span><span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="ss">:course_number</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="vi">@graduate_courses</span> <span class="o">=</span> <span class="no">Course</span><span class="o">.</span><span class="n">offered_in</span><span class="p">(</span><span class="vi">@selected_term</span><span class="p">)</span><span class="o">.</span><span class="n">graduate</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;course_code_id = ?&quot;</span><span class="p">,</span> <span class="vi">@current_code</span><span class="o">.</span><span class="n">id</span><span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="ss">:course_number</span><span class="p">)</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="ss">:course_number</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@graduate_course_levels</span> <span class="o">=</span> <span class="vi">@graduate_courses</span><span class="o">.</span><span class="n">group_by</span> <span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">t</span><span class="o">.</span><span class="n">course_level</span> <span class="p">}</span>
</span><span class='line'>      <span class="vi">@graduate_special_topics</span> <span class="o">=</span> <span class="no">Course</span><span class="o">.</span><span class="n">graduate</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;course_code_id = ? AND special_topic = ?&quot;</span><span class="p">,</span> <span class="vi">@current_code</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="kp">true</span><span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="ss">:course_number</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>    <span class="vi">@course_section</span> <span class="o">=</span> <span class="no">CourseSection</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">,</span> <span class="ss">:include</span> <span class="o">=&gt;</span> <span class="ss">:person</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">find_course</span>
</span><span class='line'>    <span class="vi">@course</span> <span class="o">=</span> <span class="no">Course</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:course_id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">record_not_found</span>
</span><span class='line'>    <span class="n">render</span> <span class="ss">:template</span> <span class="o">=&gt;</span> <span class="s2">&quot;shared/404.html.erb&quot;</span><span class="p">,</span> <span class="n">status</span><span class="p">:</span> <span class="mi">404</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>There are a lot of instance variables in there and if we want to break this up or add to it, say with distance courses like hinted at in the first file there is going to be a lot more ugliness. Going by Pivotal&#8217;s rule that a controller shouldn&#8217;t be more than 5 lines it seems like a good opportunity to use the presenter pattern. If you are unfamiliar, <a href="http://devblog.avdi.org/2012/06/04/displaycase-gem-now-available/">Avdi talks here</a> about the presenter pattern and provides some links to it.
Ideally, in the view it would be nice to have something like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= @course_sections.undergraduate_courses %&gt;</span>
</span><span class='line'><span class="sx">and</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="vi">@course_sections</span><span class="o">.</span><span class="n">undergraduate_special_topics</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">and</span>
</span><span class='line'><span class="sx">&lt;%= @course_sections.graduate_courses %&gt;</span>
</span><span class='line'><span class="ow">and</span> <span class="n">so</span> <span class="n">on</span><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>So taking a crack at moving this into a presenter we get:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CourseSectionPresenter</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">term</span><span class="p">,</span> <span class="n">code</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@selected_term</span> <span class="o">=</span> <span class="n">term</span>
</span><span class='line'>      <span class="vi">@current_code</span> <span class="o">=</span> <span class="n">code</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">undergraduate_courses</span>
</span><span class='line'>      <span class="no">Course</span><span class="o">.</span><span class="n">offered_in</span><span class="p">(</span><span class="vi">@selected_term</span><span class="p">)</span><span class="o">.</span><span class="n">undergraduate</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;course_code_id = ?&quot;</span><span class="p">,</span> <span class="vi">@current_code</span><span class="o">.</span><span class="n">id</span><span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="ss">:course_number</span><span class="p">)</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="ss">:course_number</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">undergraduate_course_levels</span>
</span><span class='line'>      <span class="n">undergraduate_courses</span><span class="o">.</span><span class="n">group_by</span> <span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">t</span><span class="o">.</span><span class="n">course_level</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">undergraduate_special_topics</span>
</span><span class='line'>      <span class="no">Course</span><span class="o">.</span><span class="n">undergraduate</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;course_code_id = ? AND special_topic = ?&quot;</span><span class="p">,</span> <span class="vi">@current_code</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="kp">true</span><span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="ss">:course_number</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">graduate_courses</span>
</span><span class='line'>      <span class="no">Course</span><span class="o">.</span><span class="n">offered_in</span><span class="p">(</span><span class="vi">@selected_term</span><span class="p">)</span><span class="o">.</span><span class="n">graduate</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;course_code_id = ?&quot;</span><span class="p">,</span> <span class="vi">@current_code</span><span class="o">.</span><span class="n">id</span><span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="ss">:course_number</span><span class="p">)</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="ss">:course_number</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">graduate_course_levels</span>
</span><span class='line'>      <span class="n">graduate_courses</span><span class="o">.</span><span class="n">group_by</span> <span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">t</span><span class="o">.</span><span class="n">course_level</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">graduate_special_topics</span>
</span><span class='line'>      <span class="no">Course</span><span class="o">.</span><span class="n">graduate</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;course_code_id = ? AND special_topic = ?&quot;</span><span class="p">,</span> <span class="vi">@current_code</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="kp">true</span><span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="ss">:course_number</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>With our new controller (before refactoring our views) currently looking like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CourseSectionsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">rescue_from</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">RecordNotFound</span><span class="p">,</span> <span class="n">with</span><span class="p">:</span> <span class="ss">:record_not_found</span>
</span><span class='line'>  <span class="n">before_filter</span> <span class="ss">:find_course</span><span class="p">,</span> <span class="ss">:except</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:index</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="k">if</span> <span class="no">CourseCode</span><span class="o">.</span><span class="n">on_site</span><span class="p">(</span><span class="n">current_site</span><span class="p">)</span><span class="o">.</span><span class="n">blank?</span>
</span><span class='line'>      <span class="n">params</span><span class="o">[</span><span class="ss">:code</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;chss&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="vi">@selected_term</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:term</span><span class="o">].</span><span class="n">blank?</span> <span class="p">?</span> <span class="n">current_term</span> <span class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:term</span><span class="o">]</span>
</span><span class='line'>    <span class="vi">@current_code</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:code</span><span class="o">].</span><span class="n">nil?</span> <span class="p">?</span> <span class="no">CourseCode</span><span class="o">.</span><span class="n">on_site</span><span class="p">(</span><span class="n">current_site</span><span class="p">)</span><span class="o">.</span><span class="n">by_code</span><span class="o">.</span><span class="n">first</span> <span class="p">:</span> <span class="no">CourseCode</span><span class="o">.</span><span class="n">on_site</span><span class="p">(</span><span class="n">current_site</span><span class="p">)</span><span class="o">.</span><span class="n">find_by_code</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:code</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@course_sections</span> <span class="o">=</span> <span class="no">CourseSectionPresenter</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vi">@selected_term</span><span class="p">,</span> <span class="vi">@current_code</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="vi">@undergraduate_courses</span> <span class="o">=</span> <span class="vi">@course_sections</span><span class="o">.</span><span class="n">undergraduate_courses</span>
</span><span class='line'>    <span class="vi">@undergraduate_course_levels</span> <span class="o">=</span> <span class="vi">@course_sections</span><span class="o">.</span><span class="n">undergraduate_course_levels</span>
</span><span class='line'>    <span class="vi">@undergraduate_special_topics</span> <span class="o">=</span> <span class="vi">@course_sections</span><span class="o">.</span><span class="n">undergraduate_special_topics</span>
</span><span class='line'>
</span><span class='line'>    <span class="vi">@graduate_courses</span> <span class="o">=</span> <span class="vi">@course_sections</span><span class="o">.</span><span class="n">graduate_courses</span>
</span><span class='line'>    <span class="vi">@graduate_course_levels</span> <span class="o">=</span> <span class="vi">@course_sections</span><span class="o">.</span><span class="n">graduate_course_levels</span>
</span><span class='line'>    <span class="vi">@graduate_special_topics</span> <span class="o">=</span> <span class="vi">@course_sections</span><span class="o">.</span><span class="n">graduate_special_topics</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>    <span class="vi">@course_section</span> <span class="o">=</span> <span class="no">CourseSection</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">,</span> <span class="ss">:include</span> <span class="o">=&gt;</span> <span class="ss">:person</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">find_course</span>
</span><span class='line'>    <span class="vi">@course</span> <span class="o">=</span> <span class="no">Course</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:course_id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">record_not_found</span>
</span><span class='line'>    <span class="n">render</span> <span class="ss">:template</span> <span class="o">=&gt;</span> <span class="s2">&quot;shared/404.html.erb&quot;</span><span class="p">,</span> <span class="n">status</span><span class="p">:</span> <span class="mi">404</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>And then after refactoring our views:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CourseSectionsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">rescue_from</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">RecordNotFound</span><span class="p">,</span> <span class="n">with</span><span class="p">:</span> <span class="ss">:record_not_found</span>
</span><span class='line'>  <span class="n">before_filter</span> <span class="ss">:find_course</span><span class="p">,</span> <span class="ss">:except</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:index</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="n">params</span><span class="o">[</span><span class="ss">:code</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;chss&quot;</span> <span class="k">if</span> <span class="no">CourseCode</span><span class="o">.</span><span class="n">on_site</span><span class="p">(</span><span class="n">current_site</span><span class="p">)</span><span class="o">.</span><span class="n">blank?</span>
</span><span class='line'>    <span class="vi">@selected_term</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:term</span><span class="o">].</span><span class="n">blank?</span> <span class="p">?</span> <span class="n">current_term</span> <span class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:term</span><span class="o">]</span>
</span><span class='line'>    <span class="vi">@current_code</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:code</span><span class="o">].</span><span class="n">nil?</span> <span class="p">?</span> <span class="no">CourseCode</span><span class="o">.</span><span class="n">on_site</span><span class="p">(</span><span class="n">current_site</span><span class="p">)</span><span class="o">.</span><span class="n">by_code</span><span class="o">.</span><span class="n">first</span> <span class="p">:</span> <span class="no">CourseCode</span><span class="o">.</span><span class="n">on_site</span><span class="p">(</span><span class="n">current_site</span><span class="p">)</span><span class="o">.</span><span class="n">find_by_code</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:code</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@course_sections</span> <span class="o">=</span> <span class="no">CourseSectionPresenter</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:term</span><span class="o">].</span><span class="n">blank?</span> <span class="p">?</span> <span class="n">current_term</span> <span class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:term</span><span class="o">]</span><span class="p">,</span> <span class="vi">@current_code</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>    <span class="vi">@course_section</span> <span class="o">=</span> <span class="no">CourseSection</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">,</span> <span class="ss">:include</span> <span class="o">=&gt;</span> <span class="ss">:person</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">find_course</span>
</span><span class='line'>    <span class="vi">@course</span> <span class="o">=</span> <span class="no">Course</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:course_id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">record_not_found</span>
</span><span class='line'>    <span class="n">render</span> <span class="ss">:template</span> <span class="o">=&gt;</span> <span class="s2">&quot;shared/404.html.erb&quot;</span><span class="p">,</span> <span class="n">status</span><span class="p">:</span> <span class="mi">404</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>We can further clean this up by moving the <code>@selected_term</code> and <code>@current_code</code> instance variables into the model but there is a separate controller also currently using them (don&#8217;t ask) so more will need to be done before we can completely clean this up.</p>

<p>Aside from cleaning up our code, this gives us the added benefit of making our code much cleaner and easier to read as well removing the number of instance variables floating around. Plus, and probably most important of all, it makes our code easier to test.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why I Don't Like Send]]></title>
    <link href="http://Poignantcode.com/blog/2013/07/28/why-i-dont-like-send/"/>
    <updated>2013-07-28T19:56:00-04:00</updated>
    <id>http://Poignantcode.com/blog/2013/07/28/why-i-dont-like-send</id>
    <content type="html"><![CDATA[<p>I&#8217;m rethinking this after some discussion. Especially since Sandi Metz in <a href="http://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330">POODR</a> says that object oriented code is all about objects <code>sending</code> messages to one another.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VPS Set Up]]></title>
    <link href="http://Poignantcode.com/blog/2013/07/16/vps-set-up/"/>
    <updated>2013-07-16T15:59:00-04:00</updated>
    <id>http://Poignantcode.com/blog/2013/07/16/vps-set-up</id>
    <content type="html"><![CDATA[<p>I recently built a rails app that needed more than the free level provided at Heroku so I decided to provision my own VPS and I thought I&#8217;d give the steps I followed to help someone else doing the same thing.</p>

<h3>I&#8217;m making the following assumptions:</h3>

<ul>
<li>You have a github account and know how to <a href="https://help.github.com/articles/generating-ssh-keys">generate SSH keys</a>.</li>
<li>You can work with a command line editor like vim/emacs/pico</li>
<li>Your using a debian based linux distro on your VPS, I&#8217;m using Ubuntu 12.04 LTS</li>
</ul>


<p>If you don&#8217;t have a VPS, most people recommend <a href="https://www.linode.com/">Linode</a> since it beats both <a href="http://aws.amazon.com/ec2/">EC2</a> and <a href="https://www.digitalocean.com/">Digital Ocean</a> when <a href="http://www.cosninix.com/wp/2013/06/amazon-aws-ec2-linode-digitalocean-cloudserver-showdown/">compared head-to-head</a> but since I was being thrifty and I didn&#8217;t need that level of performance, I went with Digital Ocean&#8217;s cheapest plan.</p>

<p>Assuming you have your server provisioned, you need to ssh into it, add a user (you don&#8217;t need to create a user with the name Sean, but you can) and give the user sudo access.</p>

<!-- more -->


<hr />

<h2>Setting up the server</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh root@server-ip-address</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ adduser sean
</span><span class='line'>Adding user `sean' ...
</span><span class='line'>Adding new group `sean' (1001) ...
</span><span class='line'>Adding new user `sean' (1001) with group `sean' ...
</span><span class='line'>Creating home directory `/home/sean' ...
</span><span class='line'>Copying files from `/etc/skel' ...
</span><span class='line'>Enter new UNIX password:
</span><span class='line'>Retype new UNIX password:
</span><span class='line'>passwd: password updated successfully
</span><span class='line'>Changing the user information for sean
</span><span class='line'>Enter the new value, or press ENTER for the default
</span><span class='line'>        Full Name []: Sean
</span><span class='line'>        Room Number []:
</span><span class='line'>        Work Phone []:
</span><span class='line'>        Home Phone []:
</span><span class='line'>        Other []:
</span><span class='line'>Is the information correct? [Y/n] y
</span><span class='line'>$ </span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ visudo</span></code></pre></td></tr></table></div></figure>


<p>Edit the file so that it looks something like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Defaults        env_reset
</span><span class='line'>Defaults        secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
</span><span class='line'>
</span><span class='line'>root    ALL=(ALL:ALL) ALL
</span><span class='line'>sean    ALL=(ALL:ALL) ALL
</span><span class='line'>
</span><span class='line'>%admin ALL=(ALL) ALL
</span><span class='line'>
</span><span class='line'>%sudo   ALL=(ALL:ALL) ALL</span></code></pre></td></tr></table></div></figure>


<p>You should now exit your server and copy your public key to your server, you can copy and paste or just use the <code>scp</code> command. For me the command was:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>scp ~/.ssh/id_rsa.pub sean@server-ip-address:.ssh/authorized_keys</span></code></pre></td></tr></table></div></figure>


<p>Now ssh back into your server using your public key. If this doesn&#8217;t work, ssh back in using your password you set when you created the account and do the following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vim /etc/ssh/sshd_config</span></code></pre></td></tr></table></div></figure>


<p>Set the following entries to yes in the <code>sshd_config</code> file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>RSAAuthentication yes
</span><span class='line'>PubkeyAuthentication yes</span></code></pre></td></tr></table></div></figure>


<p>After making the change, reload the the ssh configuration file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo service ssh reload</span></code></pre></td></tr></table></div></figure>


<p>Note: if the <code>service</code> command failed run this command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo /etc/init.d/ssh reload</span></code></pre></td></tr></table></div></figure>


<p>Exit the server and you should now be able to log in without using a password.
Next disable password logins by again editing the sshd_config file and changing the following values to no:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ChallengeResponseAuthentication no
</span><span class='line'>PasswordAuthentication no
</span><span class='line'>UsePAM no</span></code></pre></td></tr></table></div></figure>


<p>Reload the ssh config as before. You should also at this point set up ssh keys on your server and add those keys to your github profile, assuming you are going to be deploying from github. <a href="https://help.github.com/articles/generating-ssh-keys">At the top of this article I posted a link to github with their directions on creating ssh keys</a>.</p>

<hr />

<h2>Installing Ruby</h2>

<p>We should make sure our system is up to date before installing anything:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get update</span></code></pre></td></tr></table></div></figure>


<p>Now we can start with the actual ruby and rails installation. Before we can install rvm we need to install all the rvm dependencies.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install build-essential openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev automake libtool bison subversion pkg-config</span></code></pre></td></tr></table></div></figure>


<p>Then we install RVM</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ \curl -L https://get.rvm.io | bash</span></code></pre></td></tr></table></div></figure>


<p>Then reload rvm.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rvm reload</span></code></pre></td></tr></table></div></figure>


<p>Then install ruby.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rvm install 2.0.0</span></code></pre></td></tr></table></div></figure>


<p>Now install passenger.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rvmsudo gem install passenger</span></code></pre></td></tr></table></div></figure>


<p>If you want you can create a gemset for your application. If you are not planning on using your VPS for anything other than hosting this app this is probably not needed. Here is how you do it (my app is called pompeii.)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rvm gemset create pompeii</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>Webserver - Nginx</h2>

<p>Now to install Nginx we first need to install the curl development headers with SSL support:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install libcurl4-openssl-dev</span></code></pre></td></tr></table></div></figure>


<p>Then install Nginx:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rvmsudo passenger-install-nginx-module</span></code></pre></td></tr></table></div></figure>


<p>Now we need to configure Nginx for our application <code>vim /opt/nginx/conf/nginx.conf</code> and in the http section add the following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>server {
</span><span class='line'>    client_max_body_size 20M;
</span><span class='line'>    listen       80;
</span><span class='line'>  server_name mydomain.com;
</span><span class='line'>  root /home/sean/pompeii/current/public;  # You'll want to change this to your application name/home directory
</span><span class='line'>  passenger_enabled on;
</span><span class='line'>
</span><span class='line'>   location @app {
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>You don&#8217;t strictly need to add the line <code>client_max_body_size 20M;</code> unless you plan on transferring large files to/from your app. Next we need to get the linode init script and make nginx start when the server starts with the following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget -O init-deb.sh http://library.linode.com/assets/660-init-deb.sh
</span><span class='line'>$ sudo mv init-deb.sh /etc/init.d/nginx
</span><span class='line'>$ sudo chmod +x /etc/init.d/nginx
</span><span class='line'>$ sudo /usr/sbin/update-rc.d -f nginx defaults</span></code></pre></td></tr></table></div></figure>


<p>Then just restart Nginx and you are good to go:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo /etc/init.d/nginx stop
</span><span class='line'>$ sudo /etc/init.d/nginx start</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>Database - Postgres</h2>

<p>Now on to installing our database. I used Postgresql that you install with the following command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install postgresql libpq-dev</span></code></pre></td></tr></table></div></figure>


<p>We need to give our application a role and give it the ability to create databases/tables and login.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo su - postgres
</span><span class='line'>$ psql   # Enter the postgresql command line
</span><span class='line'>CREATE ROLE sean WITH LOGIN CREATEDB;
</span><span class='line'>\q</span></code></pre></td></tr></table></div></figure>


<p>Now just create your database:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>createdb pompeii -O sean</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>Deployment - Capistrano</h2>

<p>Now we just need to set up capistrano and we are good to go. Just add the following gems to your gemfile:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;capistrano&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;rvm-capistrano&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then enter the following command from your command line on your development machine: <code>capify .</code>
Your Capfile should look like this:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">load</span> <span class="s1">&#39;deploy&#39;</span>
</span><span class='line'><span class="nb">load</span> <span class="s1">&#39;deploy/assets&#39;</span>
</span><span class='line'><span class="nb">load</span> <span class="s1">&#39;config/deploy&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Your <code>deploy.rb</code> should look something like this:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;rvm/capistrano&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;bundler/capistrano&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">set</span> <span class="ss">:deploy_to</span><span class="p">,</span> <span class="s2">&quot;/home/sean/pompeii&quot;</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:repository</span><span class="p">,</span>  <span class="s2">&quot;https://github.com/SeanMarcia/pompeii.git&quot;</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:rvm_type</span><span class="p">,</span> <span class="ss">:user</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:rvm_ruby_string</span><span class="p">,</span> <span class="ss">:local</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:use_sudo</span><span class="p">,</span> <span class="kp">false</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:deploy_via</span><span class="p">,</span> <span class="ss">:remote_cache</span>
</span><span class='line'>
</span><span class='line'><span class="n">set</span> <span class="ss">:user</span><span class="p">,</span> <span class="s2">&quot;sean&quot;</span>
</span><span class='line'><span class="n">role</span> <span class="ss">:web</span><span class="p">,</span> <span class="s2">&quot;mywebip&quot;</span>
</span><span class='line'><span class="n">role</span> <span class="ss">:app</span><span class="p">,</span> <span class="s2">&quot;mywebip&quot;</span>
</span><span class='line'><span class="n">role</span> <span class="ss">:db</span><span class="p">,</span>  <span class="s2">&quot;mywebip&quot;</span><span class="p">,</span> <span class="ss">:primary</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'><span class="n">after</span> <span class="s2">&quot;deploy:restart&quot;</span><span class="p">,</span> <span class="s2">&quot;deploy:cleanup&quot;</span>
</span><span class='line'><span class="n">after</span> <span class="s2">&quot;deploy&quot;</span><span class="p">,</span> <span class="s2">&quot;rvm:trust_rvmrc&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">namespace</span> <span class="ss">:deploy</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:start</span> <span class="k">do</span> <span class="p">;</span> <span class="k">end</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:stop</span> <span class="k">do</span> <span class="p">;</span> <span class="k">end</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:restart</span><span class="p">,</span> <span class="ss">:roles</span> <span class="o">=&gt;</span> <span class="ss">:app</span><span class="p">,</span> <span class="ss">:except</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:no_release</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="p">}</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">run</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">try_sudo</span><span class="si">}</span><span class="s2"> touch </span><span class="si">#{</span><span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">current_path</span><span class="p">,</span><span class="s1">&#39;tmp&#39;</span><span class="p">,</span><span class="s1">&#39;restart.txt&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">namespace</span> <span class="ss">:rvm</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:trust_rvmrc</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">run</span> <span class="s2">&quot;rvm rvmrc trust </span><span class="si">#{</span><span class="n">release_path</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Assuming you want capistrano to setup and create the directories for you:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cap deploy:setup</span></code></pre></td></tr></table></div></figure>


<p>Now test to make sure there are no errors with:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cap deploy:check</span></code></pre></td></tr></table></div></figure>


<p>Use cap deploy:cold the first time you deploy, after that `cap deploy&#8217; is going to be all you need.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cap deploy:cold</span></code></pre></td></tr></table></div></figure>


<p>Finally migrate your database and you should be good to go.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cap deploy:migrate</span></code></pre></td></tr></table></div></figure>


<p>This is only a fraction of my deploy script, I have tasks in there to restart solr for search and to precompile my assets to speed up my deployment but this should be enough to get you going. Hopefully your site is now live and on the web!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fibonacci]]></title>
    <link href="http://Poignantcode.com/blog/2013/06/15/fibonacci/"/>
    <updated>2013-06-15T13:49:00-04:00</updated>
    <id>http://Poignantcode.com/blog/2013/06/15/fibonacci</id>
    <content type="html"><![CDATA[<p>I was looking into something related to the Fibonacci sequence and the guy sitting beside me at <a href="http://www.rubynation.org/">RubyNation</a> was also looking into the fibonacci sequence for another completely unrelated reason. We talked briefly and then set about solving the sequence with a variety of different methods.</p>

<p>The first was recursion:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">fib</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">n</span> <span class="k">if</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="mi">2</span>
</span><span class='line'>  <span class="n">fib</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="n">fib</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>We all know that using recursion can get pretty ugly especially with extremely large numbers. Too much stuff on your stack and bang a stack overflow.
The second was arrays:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">fib</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">n</span> <span class="k">if</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="mi">2</span>
</span><span class='line'>  <span class="n">f</span> <span class="o">=</span> <span class="o">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="o">]</span>
</span><span class='line'>  <span class="n">n</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">f</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="o">=</span> <span class="n">f</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">+</span> <span class="n">f</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>    <span class="n">f</span><span class="o">.</span><span class="n">shift</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">f</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>This was my favourite solution and seemed the easiest while still being readable:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">fib</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'>  <span class="n">a</span><span class="p">,</span><span class="n">b</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span><span class="mi">1</span>
</span><span class='line'>  <span class="n">n</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">a</span><span class="p">,</span><span class="n">b</span> <span class="o">=</span> <span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="o">+</span><span class="n">b</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">a</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is a solution using hashes which while cool, is difficult to read which seems unrubylike to me:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">fib</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span> <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span> <span class="o">=&gt;</span> <span class="mi">1</span> <span class="p">}</span>
</span><span class='line'><span class="n">fib</span><span class="o">.</span><span class="n">default_proc</span> <span class="o">=</span> <span class="nb">proc</span> <span class="p">{</span> <span class="o">|</span><span class="n">h</span><span class="p">,</span><span class="n">k</span><span class="o">|</span> <span class="n">h</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="n">h</span><span class="o">[</span><span class="n">k</span><span class="o">-</span><span class="mi">2</span><span class="o">]</span> <span class="o">+</span> <span class="n">h</span><span class="o">[</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>I think for an upcoming <a href="http://www.meetup.com/Arlington-Ruby">ArlingtonRuby</a> hack night I am going to use the Fibonacci sequence as a problem to hack on.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Minitest]]></title>
    <link href="http://Poignantcode.com/blog/2013/03/01/minitest/"/>
    <updated>2013-03-01T11:35:00-05:00</updated>
    <id>http://Poignantcode.com/blog/2013/03/01/minitest</id>
    <content type="html"><![CDATA[<p>Everyone seems to have a hate on for Rspec recently and a love on for Minitest so I decided to give it a try but it took me forever to get started because I couldn&#8217;t find a good reference of necessary matchers and expectations so I decided to list them here for easy access.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">obj</span><span class="o">.</span><span class="n">must_be</span><span class="p">(</span><span class="n">operator</span><span class="p">,</span> <span class="n">expected</span><span class="p">)</span> <span class="o">-</span> <span class="k">for</span> <span class="n">example</span><span class="p">,</span> <span class="mi">10</span><span class="o">.</span><span class="n">must_be</span> <span class="ss">:&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="p">,</span> <span class="mi">11</span>
</span><span class='line'><span class="n">obj</span><span class="o">.</span><span class="n">must_be_close_to</span> <span class="o">-</span> <span class="n">the</span> <span class="n">equivalent</span> <span class="n">of</span> <span class="n">assert_in_delta</span>
</span><span class='line'><span class="n">obj</span><span class="o">.</span><span class="n">must_be_empty</span> <span class="o">-</span> <span class="no">Fails</span> <span class="k">unless</span> <span class="n">obj</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'><span class="n">obj</span><span class="o">.</span><span class="n">must_be_instance_of</span><span class="p">(</span><span class="n">klass</span><span class="p">)</span> <span class="o">-</span> <span class="no">Fails</span> <span class="k">unless</span> <span class="n">obj</span><span class="o">.</span><span class="n">class</span> <span class="o">==</span> <span class="n">klass</span>
</span><span class='line'><span class="n">obj</span><span class="o">.</span><span class="n">must_be_kind_of</span><span class="p">(</span><span class="n">klass</span><span class="p">)</span> <span class="o">-</span> <span class="no">Fails</span> <span class="k">unless</span> <span class="n">obj</span> <span class="n">is</span> <span class="n">of</span> <span class="k">class</span> <span class="n">klass</span> <span class="ow">or</span> <span class="n">klass</span> <span class="n">is</span> <span class="n">one</span> <span class="n">of</span> <span class="n">its</span> <span class="n">superclasses</span><span class="o">.</span>
</span><span class='line'><span class="n">obj</span><span class="o">.</span><span class="n">must_be_nil</span>
</span><span class='line'><span class="n">obj</span><span class="o">.</span><span class="n">must_be_same_as</span> <span class="o">-</span> <span class="n">tests</span> <span class="k">for</span> <span class="kp">true</span> <span class="n">object</span> <span class="n">equality</span>
</span><span class='line'><span class="nb">lambda</span> <span class="p">{}</span><span class="o">.</span><span class="n">must_be_silent</span>
</span><span class='line'><span class="n">obj</span><span class="o">.</span><span class="n">must_be_within_delta</span>
</span><span class='line'><span class="n">obj</span><span class="o">.</span><span class="n">must_be_within_epsilon</span>
</span><span class='line'><span class="n">obj</span><span class="o">.</span><span class="n">must_equal</span><span class="p">(</span><span class="n">other</span><span class="p">)</span> <span class="o">-</span> <span class="no">Does</span> <span class="n">a</span> <span class="o">==</span><span class="sr">/eql? comparison between two objects.</span>
</span><span class='line'><span class="sr">obj.must_include(other)</span>
</span><span class='line'><span class="sr">obj.must_match(regex) - A regular expression match, e.g. &quot;hello&quot;.must_match /</span><span class="n">w</span><span class="o">+/</span>
</span><span class='line'><span class="nb">lambda</span> <span class="p">{}</span><span class="o">.</span><span class="n">must_output</span><span class="p">(</span><span class="n">stdout</span><span class="p">,</span> <span class="o">[</span><span class="n">stderr</span><span class="o">.</span><span class="n">.</span><span class="o">]</span><span class="p">)</span> <span class="o">-</span> <span class="no">The</span> <span class="n">block</span> <span class="n">should</span> <span class="n">have</span> <span class="n">certain</span> <span class="n">output</span> <span class="n">on</span> <span class="n">stdout</span> <span class="ow">or</span> <span class="n">stderr</span><span class="o">.</span> <span class="no">Set</span> <span class="n">stdout</span> <span class="n">to</span> <span class="kp">nil</span> <span class="n">just</span> <span class="n">to</span> <span class="n">check</span> <span class="n">stderr</span><span class="o">.</span>
</span><span class='line'><span class="nb">lambda</span> <span class="p">{}</span><span class="o">.</span><span class="n">must_raise</span><span class="p">(</span><span class="n">exception</span><span class="p">)</span>
</span><span class='line'><span class="n">obj</span><span class="o">.</span><span class="n">must_respond_to</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
</span><span class='line'><span class="n">obj</span><span class="o">.</span><span class="n">must_throw</span><span class="p">(</span><span class="n">sym</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>There are also, like rspec, negative matchers and expectations. They are:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">wont_be</span>
</span><span class='line'><span class="n">wont_be_empty</span>
</span><span class='line'><span class="n">wont_be_instance_of</span>
</span><span class='line'><span class="n">wont_be_kind_of</span>
</span><span class='line'><span class="n">wont_be_nil</span>
</span><span class='line'><span class="n">wont_be_same_as</span>
</span><span class='line'><span class="n">wont_equal</span>
</span><span class='line'><span class="n">wont_include</span>
</span><span class='line'><span class="n">wont_match</span>
</span><span class='line'><span class="n">wont_respond_to</span>
</span></code></pre></td></tr></table></div></figure>


<p>Hope this helps with my TDD. That&#8217;s TEST driven development, not Troll driven&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Koans Part 2]]></title>
    <link href="http://Poignantcode.com/blog/2013/01/22/ruby-koans-part-2/"/>
    <updated>2013-01-22T18:32:00-05:00</updated>
    <id>http://Poignantcode.com/blog/2013/01/22/ruby-koans-part-2</id>
    <content type="html"><![CDATA[<p>Here is that last piece of code in a much more Rubylike manner.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">triangle</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">)</span>
</span><span class='line'>  <span class="k">raise</span> <span class="no">TriangleError</span> <span class="k">unless</span> <span class="no">TriangleSideLengthsAreValid</span><span class="p">?(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="ss">:equilateral</span> <span class="k">if</span> <span class="o">[</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="o">].</span><span class="n">uniq</span><span class="o">.</span><span class="n">length</span><span class="o">==</span><span class="mi">1</span>
</span><span class='line'>  <span class="k">return</span> <span class="ss">:isosceles</span> <span class="k">if</span> <span class="o">[</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="o">].</span><span class="n">uniq</span><span class="o">.</span><span class="n">length</span><span class="o">==</span><span class="mi">2</span>
</span><span class='line'>  <span class="k">return</span> <span class="ss">:scalene</span> <span class="k">if</span> <span class="o">[</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="o">].</span><span class="n">uniq</span><span class="o">.</span><span class="n">length</span><span class="o">==</span><span class="mi">3</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="k">def</span> <span class="nf">TriangleSideLengthsAreValid?</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">)</span>
</span><span class='line'>  <span class="n">ax</span><span class="p">,</span><span class="n">bx</span><span class="p">,</span><span class="n">cx</span><span class="o">=[</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="o">].</span><span class="n">sort</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">(</span><span class="n">ax</span><span class="o">+</span><span class="n">bx</span><span class="p">)</span><span class="o">&gt;</span><span class="n">cx</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Koans]]></title>
    <link href="http://Poignantcode.com/blog/2013/01/22/ruby-koans/"/>
    <updated>2013-01-22T13:22:00-05:00</updated>
    <id>http://Poignantcode.com/blog/2013/01/22/ruby-koans</id>
    <content type="html"><![CDATA[<p>The Ruby Koans are something every rubyist knows about and has done about 75% of the way through but never seems to finish. After reading about <a href="http://blog.rubygeek.com/2012/09/06/playing-with-rubykoans/">Nola&#8217;s experience</a> I thought it was about time I got all the way through. While working through I found one example that shows just how well done and fun they are and I thought I&#8217;d share.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Triangle Project Code.</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Triangle analyzes the lengths of the sides of a triangle</span>
</span><span class='line'><span class="c1"># (represented by a, b and c) and returns the type of triangle.</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># It returns:</span>
</span><span class='line'><span class="c1">#   :equilateral  if all sides are equal</span>
</span><span class='line'><span class="c1">#   :isosceles    if exactly 2 sides are equal</span>
</span><span class='line'><span class="c1">#   :scalene      if no sides are equal</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># The tests for this method can be found in</span>
</span><span class='line'><span class="c1">#   about_triangle_project.rb</span>
</span><span class='line'><span class="c1"># and</span>
</span><span class='line'><span class="c1">#   about_triangle_project_2.rb</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="k">def</span> <span class="nf">triangle</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">a</span><span class="o">&lt;=</span><span class="mi">0</span> <span class="ow">or</span> <span class="n">b</span><span class="o">&lt;=</span><span class="mi">0</span> <span class="ow">or</span> <span class="n">c</span><span class="o">&lt;=</span><span class="mi">0</span>
</span><span class='line'>    <span class="nb">fail</span> <span class="no">TriangleError</span><span class="p">,</span> <span class="s2">&quot;Sides must all have length greater than 0.&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">myArray</span> <span class="o">=</span> <span class="o">[</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="o">]</span>
</span><span class='line'>  <span class="n">maxSide</span> <span class="o">=</span> <span class="n">myArray</span><span class="o">.</span><span class="n">max</span>
</span><span class='line'>  <span class="n">total</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="n">myArray</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">myEle</span><span class="o">|</span> <span class="n">total</span> <span class="o">+=</span> <span class="n">myEle</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">total</span> <span class="o">-</span> <span class="n">maxSide</span> <span class="o">&lt;=</span> <span class="n">maxSide</span>
</span><span class='line'>    <span class="nb">fail</span> <span class="no">TriangleError</span><span class="p">,</span> <span class="s2">&quot;Sum of shortest two sides must be greater than length of longest side.&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">a</span><span class="o">==</span><span class="n">b</span> <span class="ow">and</span> <span class="n">a</span><span class="o">==</span><span class="n">c</span>
</span><span class='line'>     <span class="ss">:equilateral</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">a!</span><span class="o">=</span><span class="n">b</span> <span class="ow">and</span> <span class="n">b!</span><span class="o">=</span><span class="n">c</span> <span class="ow">and</span> <span class="n">a!</span><span class="o">=</span><span class="n">c</span>
</span><span class='line'>    <span class="ss">:scalene</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="ss">:isosceles</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Error class used in part 2.  No need to change this code.</span>
</span><span class='line'><span class="k">class</span> <span class="nc">TriangleError</span> <span class="o">&lt;</span> <span class="no">StandardError</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Looking at this you can probably immediately see that the problem is with the error handling, it is attempting to use fail rather than raise. Each of the exercises are meant to teach you something about how Ruby works.</p>

<p>If you are not familiar with <a href="http://rubykoans.com/">RubyKoans</a> I suggest you check it out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL Old School Part 2]]></title>
    <link href="http://Poignantcode.com/blog/2012/12/06/sql-old-school-part-2/"/>
    <updated>2012-12-06T09:22:00-05:00</updated>
    <id>http://Poignantcode.com/blog/2012/12/06/sql-old-school-part-2</id>
    <content type="html"><![CDATA[<p>Here is the second SQL example that took me more googling than it should have so I thought I&#8217;d also post about it.
Lets assume we have a SQL table with employee bonuses in it. We know how easy it is to find the highest bonus.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="k">max</span><span class="p">(</span><span class="n">emp_bonus</span><span class="p">)</span> <span class="k">FROM</span> <span class="n">employeetable</span>
</span></code></pre></td></tr></table></div></figure>


<p>Or the smallest bonus.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="k">min</span><span class="p">(</span><span class="n">emp_bonus</span><span class="p">)</span> <span class="k">FROM</span> <span class="n">employeetable</span>
</span></code></pre></td></tr></table></div></figure>


<p>However, what if we want to know what the 8th highest bonus was? It turns out it is a lot easier than it seemed (at least to me.)</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="k">min</span><span class="p">(</span><span class="n">emp_bonus</span><span class="p">)</span> <span class="k">FROM</span> <span class="n">employeetable</span>
</span><span class='line'><span class="k">WHERE</span> <span class="n">emp_bonus</span> <span class="k">IN</span>
</span><span class='line'><span class="p">(</span><span class="k">SELECT</span> <span class="k">distinct</span> <span class="n">top</span> <span class="mi">8</span> <span class="n">emp_bonus</span> <span class="k">FROM</span> <span class="n">employeetable</span> <span class="k">order</span> <span class="k">by</span> <span class="n">emp_bonus</span> <span class="k">desc</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>If we wanted the 120th highest bonus we would just make it the top 120.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL Old School]]></title>
    <link href="http://Poignantcode.com/blog/2012/12/05/sql-old-school/"/>
    <updated>2012-12-05T12:41:00-05:00</updated>
    <id>http://Poignantcode.com/blog/2012/12/05/sql-old-school</id>
    <content type="html"><![CDATA[<p>Those of us who use Rails and have access to its magnificent ORM often take for granted how much it gives us. This came up recently when I needed to find some duplicate entries using SQL queries. I&#8217;ve changed table names to keep things private but everything else is the same.</p>

<p>Let say you have a database table (songtable) of songs where you want to remove the all the duplicate songs. The database has the columns title, band and year. While it is possible to do this all in one table, something about me likes to create a temporary table, verify it and then replace the original table.</p>

<p>Simply start by creating your temporary table.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">CREATE</span> <span class="k">table</span> <span class="n">songtable_temp</span>
</span><span class='line'>    <span class="p">(</span><span class="n">title</span>  <span class="nb">varchar</span><span class="p">(</span><span class="mi">30</span><span class="p">),</span>
</span><span class='line'>     <span class="n">band</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">30</span><span class="p">),</span>
</span><span class='line'>     <span class="k">year</span>   <span class="nb">varchar</span><span class="p">(</span><span class="mi">10</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now that we have our temporary table we just throw in all the values from our original songtable making sure we use group by. Group by will catch all copies and consolidate them.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">INSERT</span> <span class="k">into</span> <span class="n">songtable_temp</span>
</span><span class='line'>    <span class="k">SELECT</span> <span class="n">title</span><span class="p">,</span><span class="n">band</span><span class="p">,</span><span class="k">year</span>
</span><span class='line'>    <span class="k">FROM</span> <span class="n">songtable</span>
</span><span class='line'>    <span class="k">GROUP</span> <span class="k">BY</span> <span class="n">title</span><span class="p">,</span><span class="n">band</span><span class="p">,</span><span class="k">year</span>
</span></code></pre></td></tr></table></div></figure>


<p>In this example you would definitely need to group by title and band since multiple bands can record the same song and grouping by year might also be a good thing since bands often re-release versions of the song. Now that you have the correct values, you just need to clear the original table.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">TRUNCATE</span> <span class="k">table</span> <span class="n">songtable</span>
</span></code></pre></td></tr></table></div></figure>


<p>It is important you use truncate rather than delete or drop. Delete is generally just for removing specific rows and drop removes the table all together. Truncate removes everything from the table but keeps it structure intact. Now we can put all the values back into the first table with the duplicates removed.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">INSERT</span> <span class="k">into</span> <span class="n">songtable</span>
</span><span class='line'>    <span class="k">SELECT</span> <span class="o">*</span> <span class="k">from</span> <span class="n">songtable_temp</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now just drop the temporary table and you are finished.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">DROP</span> <span class="k">table</span> <span class="n">songtable_temp</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CI Servers for Fun and Profit]]></title>
    <link href="http://Poignantcode.com/blog/2012/10/24/ci-servers-for-fun-and-profit/"/>
    <updated>2012-10-24T10:18:00-04:00</updated>
    <id>http://Poignantcode.com/blog/2012/10/24/ci-servers-for-fun-and-profit</id>
    <content type="html"><![CDATA[<p>I turned an old desktop into a CI server and then for fun I connected a green and a red lava lamp into it to go off when the tests are passing or not. It was a pretty simple process with only a few gotchas.</p>

<!-- more -->


<p>Equipment Used:</p>

<ul>
<li><a href="http://www.x10.com/automation/ck18a_s_ps32.html">X10 Firecracker Kit</a></li>
<li>Two lava lamps. (I used green and red)</li>
<li>An old desktop computer</li>
</ul>


<p>Programs/Software Used:</p>

<ul>
<li><a href="https://github.com/thoughtworks/cruisecontrol.rb">CruiseControl.rb</a></li>
<li><a href="http://www.pantz.org/software/cron/croninfo.html">Cron/Crontab</a></li>
<li><a href="http://en.wikipedia.org/wiki/Expect">Unix tools (Expect)</a></li>
</ul>


<hr />

<h3>First steps</h3>

<p>I am assuming that you have already grabbed an old desktop computer and installed Ubuntu on it.</p>

<p>If you are new to Ubuntu you may run into the same annoying issue of needing to enter your ssh passphrase each time you do a git pull. Lucky Ubuntu, like other unix based systems, comes with <a href="http://manpages.ubuntu.com/manpages/precise/en/man1/ssh-agent.1.html">ssh-agent</a> which is a program to hold your ssh private keys. Combine this with <a href="http://manpages.ubuntu.com/manpages/precise/en/man1/ssh-agent.1.html">ssh-add</a> and you won&#8217;t need to enter your password again. I use the zsh shell so you might need to change that but for me the process went as follows:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-agent zsh
</span><span class='line'>ssh-add
</span><span class='line'>Enter passphrase for /home/sean/.ssh/id_rsa: 
</span><span class='line'>Identity added: /home/sean/.ssh/id_rsa (/home/sean/.ssh/id_rsa)</span></code></pre></td></tr></table></div></figure>


<p>I used the bottlerocket package to communicate with the serial port controller on the x10 firecracker kit. It was fairly trivial to install:</p>

<p>Installing bottlerocket:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install bottlerocket</span></code></pre></td></tr></table></div></figure>


<p>I had a couple issues with permissions of both my user and having access to the open serial port. These were fixed with the following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo adduser sean dialout
</span><span class='line'>sudo chmod o+rw /dev/ttyS0</span></code></pre></td></tr></table></div></figure>


<p>You should note that bottlerocket defaults to the serial port ttyS0 so if you have plugged it into a different one you&#8217;ll need to update accordingly. If you aren&#8217;t sure which serial port is active run the following command to see which serial port is enabled:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dmesg | grep tty</span></code></pre></td></tr></table></div></figure>


<p>Which will show you what you need to know, you can see from the second line which serial port is on the expect port of ttyS0:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[    0.000000] console [tty0] enabled
</span><span class='line'>[    4.244997] serial8250: ttyS0 at I/O 0x3f8 (irq = 4) is a 16550A
</span><span class='line'>[    4.320518] 00:07: ttyS0 at I/O 0x3f8 (irq = 4) is a 16550A
</span><span class='line'>[    4.356133] 0000:00:03.3: ttyS4 at I/O 0xecb8 (irq = 17) is a 16550A</span></code></pre></td></tr></table></div></figure>


<p>I set up a cron job to do a git pull on my repo every minute which essentially keeps it live and synced. I had a a problem with my cron job since it asks for my ssh key password and wasn&#8217;t allowing the cron to run. So if the solution above with the ssh-agent doesn&#8217;t work or stops working, you can fix it with the a similar shell script <code>pull.sh</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/usr/bin/env zsh 
</span><span class='line'>
</span><span class='line'>password="your ssh password"
</span><span class='line'>sourcedest="/home/sean/ruby/repository"
</span><span class='line'>cd $sourcedest
</span><span class='line'>
</span><span class='line'>echo "Updating Source..."
</span><span class='line'>expect &lt;&lt;- DONE
</span><span class='line'>  set timeout -1
</span><span class='line'>
</span><span class='line'>  spawn git pull
</span><span class='line'>  match_max 100000
</span><span class='line'>
</span><span class='line'>  # Look for passwod prompt
</span><span class='line'>  expect "*?:*"
</span><span class='line'>  # Send password aka $password
</span><span class='line'>  send -- "$password\r"
</span><span class='line'>  expect eof
</span><span class='line'>DONE</span></code></pre></td></tr></table></div></figure>


<p>I set up my cron job with <code>crontab -e</code> and inserted the following at the end:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>*/1 * * * * /home/sean/pull.sh</span></code></pre></td></tr></table></div></figure>


<p>With that I have my project installed and checking for updates. Now to install <code>cruisecontrol.rb</code>. I went with cruisecontrol.rb because it is simple to install and is easy to hook into a project.</p>

<p>Start by cloning the following project:</p>

<p><code>git://github.com/thoughtworks/cruisecontrol.rb.git</code></p>

<p>Then go into you cruisecontrol directory and run the following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./cruise add myproject -r /home/sean/ruby/repository -s git</span></code></pre></td></tr></table></div></figure>


<p>Now it is monitoring your project and you can view the cruisecontrol dashboard by going to <code>localhost:3333</code>.<br/>
Integration with bottlerocket is extremely simple. What I did was turn on the green lamp and the red on off if the build passes and do the reverse if it doesn&#8217;t pass. The following is the code I added into cruisecontrol:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#lib/builder_plugins/builder_status.rb</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">build_finished</span><span class="p">(</span><span class="n">build</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">build</span><span class="o">.</span><span class="n">successful?</span>
</span><span class='line'>      <span class="nb">system</span><span class="p">(</span><span class="s2">&quot;br a1 on&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">system</span><span class="p">(</span><span class="s2">&quot;br a2 off&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>     <span class="nb">system</span><span class="p">(</span><span class="s2">&quot;br a2 on&quot;</span><span class="p">)</span>
</span><span class='line'>     <span class="nb">system</span><span class="p">(</span><span class="s2">&quot;br a1 off&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Like I mentioned, I only have two lamps so I am just checking if the build was successful or not. There are several more options like <code>build.failed?</code> and <code>build.incomplete?</code> that are detailed on in the <a href="http://cruisecontrolrb.thoughtworks.com/documentation/plugins">cruisecontrol.rb plugin documentation</a> that you could extend your project if you had more lamps. Personally, I debated keeping the green and red for successful and failed and then adding in some sort of noise for incomplete.</p>

<p>The final gotcha I encountered was that the build would pass even though I had failing tests. After some research it turns out that this is specific to the the version of rails we are using and the exit signal it sends when it finishes its tests and can be fixed by adding the following to your Rakefile which will send the appropriate (for cruisecontrol) exit signal:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">task</span> <span class="ss">:cruise</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">system</span><span class="p">(</span><span class="s1">&#39;rspec spec/*&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="k">if</span> <span class="vg">$?</span> <span class="o">!=</span> <span class="mi">0</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>Pictures!</h2>

<h4>Started with an old desktop</h4>

<p><img src="http://Poignantcode.com/images/ci2.jpg"></p>

<h4>Installed Ubuntu on it</h4>

<p><img src="http://Poignantcode.com/images/ci1.jpg"></p>

<h4>Received the X10 controls</h4>

<p><img src="http://Poignantcode.com/images/ci3.jpg"></p>

<h4>Serial Port Controller</h4>

<p><img src="http://Poignantcode.com/images/ci4.jpg"></p>

<h4>X10 Wireless Receivers</h4>

<p><img src="http://Poignantcode.com/images/ci5.jpg"></p>

<h4>Lava Lamps!</h4>

<p><img src="http://Poignantcode.com/images/ci6.jpg"></p>

<h4>Lava Lamps In Action</h4>

<p>I think I may need to get a night time shot the liquid is looking cloudy.</p>

<p><img src="http://Poignantcode.com/images/ci7.jpg"></p>

<hr />

<h3>What&#8217;s up next?</h3>

<p>I recently had the opportunity to play with a <a href="http://www.raspberrypi.org/">raspberry pi</a> at <a href="http://rubydcamp.org">rubydcamp</a> and I was hooked! I&#8217;ve added my name to the waiting list for one and when it arrives I&#8217;m going to see about turning it into a CI server with some fun features&#8230; So many ideas, so little time!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Validate Email without Regex]]></title>
    <link href="http://Poignantcode.com/blog/2012/09/14/validate-email-without-regex/"/>
    <updated>2012-09-14T11:20:00-04:00</updated>
    <id>http://Poignantcode.com/blog/2012/09/14/validate-email-without-regex</id>
    <content type="html"><![CDATA[<p>There has been some talk recently about validating e-mail without using regular expressions.</p>

<p>I&#8217;m sure we&#8217;ve all used or seen something like this:</p>

<figure class='code'><figcaption><span>Validating e-mail with regex</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:email</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">email_regex</span> <span class="o">=</span> <span class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:presence</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>                    <span class="ss">:format</span>   <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:with</span> <span class="o">=&gt;</span> <span class="n">email_regex</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>It works, but it uses the evil regex.</p>

<hr />

<h4>What&#8217;s my solution?</h4>

<p>David Cellis recently <code><a href="http://davidcelis.com/blog/2012/09/06/stop-validating-email-addresses-with-regex/">posted how he does it</a></code> and I thought I&#8217;d also provide how I do it as well. I really like David&#8217;s solution and also understand that mine is probably overkill but I do feel that mine will catch more invalid e-mails that David&#8217;s way misses.</p>

<p>The user model:</p>

<figure class='code'><figcaption><span>user.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:presence</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">:email</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>From here I use a custom rails validator which I call <code>app/validators/email_validator.rb</code>.</p>

<p>Here is my validator file:</p>

<figure class='code'><figcaption><span>email_validator.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;mail&#39;</span>
</span><span class='line'><span class="k">class</span> <span class="nc">EmailValidator</span> <span class="o">&lt;</span> <span class="no">ActiveModel</span><span class="o">::</span><span class="no">EachValidator</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">validate_each</span><span class="p">(</span><span class="n">record</span><span class="p">,</span><span class="n">attribute</span><span class="p">,</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="k">begin</span>
</span><span class='line'>      <span class="n">m</span> <span class="o">=</span> <span class="no">Mail</span><span class="o">::</span><span class="no">Address</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'>      <span class="n">r</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="n">domain</span> <span class="o">&amp;&amp;</span> <span class="n">m</span><span class="o">.</span><span class="n">address</span> <span class="o">==</span> <span class="n">value</span>
</span><span class='line'>      <span class="n">t</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="n">__send__</span><span class="p">(</span><span class="ss">:tree</span><span class="p">)</span>
</span><span class='line'>      <span class="n">r</span> <span class="o">&amp;&amp;=</span> <span class="p">(</span><span class="n">t</span><span class="o">.</span><span class="n">domain</span><span class="o">.</span><span class="n">dot_atom_text</span><span class="o">.</span><span class="n">elements</span><span class="o">.</span><span class="n">size</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="k">rescue</span> <span class="no">Exception</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>      <span class="n">r</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">record</span><span class="o">.</span><span class="n">errors</span><span class="o">[</span><span class="n">attribute</span><span class="o">]</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">options</span><span class="o">[</span><span class="ss">:message</span><span class="o">]</span> <span class="o">||</span> <span class="s2">&quot;is invalid&quot;</span><span class="p">)</span> <span class="k">unless</span> <span class="n">r</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>No regex!</h4>

<p>If are not familiar with rails validators they function much the same way as initializers (<code>/config/initializers/</code>) in that rails will load them at startup if they are in your <code>app/validators/</code> directory. If you want them in another directory such as <code>lib/validators/</code> which seems to the convention simply add the following to your <code>config/application.rb</code> file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">autoload_paths</span> <span class="o">+=</span> <span class="sx">%W[&quot;</span><span class="si">#{</span><span class="n">config</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="sx">/lib/validators/&quot;]</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Screen vs. Tmux]]></title>
    <link href="http://Poignantcode.com/blog/2012/08/21/screen-vs-tmux/"/>
    <updated>2012-08-21T20:14:00-04:00</updated>
    <id>http://Poignantcode.com/blog/2012/08/21/screen-vs-tmux</id>
    <content type="html"><![CDATA[<p>I am a long time fan and user of <code><a href="http://www.gnu.org/s/screen">GNU Screen</a></code> and when I began pair-programming I found out that I had to use <code><a href="http://tmux.sourceforge.net/">Tmux</a></code> in order to pair program remotely (ie- via ssh) I was a little dismayed at this new barrier to entry, especially since I was still in my early development days. I did a little digging into screen and it turned out that sharing a screen session is just as easy as in tmux. Here is how you do it:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#First - Set permissions on the screen directory.
</span><span class='line'>chmod 755 /var/run/screen
</span><span class='line'>#Second - Create a session (the -S flag gives it the name shared)
</span><span class='line'>screen -S shared
</span><span class='line'>#Third - Make the screen multiuser and give access to the someone else.
</span><span class='line'>ctrl-a :multiuser on
</span><span class='line'>ctrl-a :acladd bob #assuming bob is the unix username of the person to share the session with.
</span><span class='line'>#Have bob (the other user) join the session. (Bob types this)
</span><span class='line'>screen -x sean/shared #assuming he is joining sean's screen
</span><span class='line'>#Voila! You are both sharing a session!</span></code></pre></td></tr></table></div></figure>


<hr />

<h4>Is one better than the other?</h4>

<p>Ultimately, it comes down to personal preference. Several people whom I have the utmost respect for, namely <a href="http://evan.tiggerpalace.com/articles/2011/10/17/some-people-call-me-the-remote-pairing-guy-/">Evan Light</a> and <a href="http://www.rubygeek.com/2012/02/26/screen-multiplexing-productivity/">Nola Stowe</a> are both proponents of Tmux and even the good people at Thoughtbot have put together a <a href="http://robots.thoughtbot.com/post/2641409235/a-tmux-crash-course">crash course on the topic.</a></p>

<p><strong>Unfortunately, I disagree.</strong></p>

<p>The &#8220;advantage&#8221; of Tmux over Screen is that is allows you to divide your unix screen up into multiple windows. I&#8217;ve heard story after story of how people split their screen with windows for editing, koans, fun, and so forth. <strong>That is the crux of my complaint.</strong></p>

<p>As humans, our <code>locus of attention</code> only allows us to focus on a single task at a time. So, by using Tmux, all you are accomplishing is that you are making your workspace smaller. So unless you are like me and lucky to have a thunderbolt display where you have ample screen real estate where dividing up your screen isn&#8217;t going to change your usability, I would suggest sticking with screen and creating multiple screens and just label them efficiently.</p>

<p>I was perusing the book <code>The Art of Unix Usability</code> by Eric Steven Raymond and Rob W. Landley and they reinforce this idea in their chapter on <a href="http://www.catb.org/esr/writings/taouu/html/ch04s01.html">Novelty, Consciousness, and the Single Locus of Attention</a>.</p>

<p>They sum their issues into two laws which they attribute to Jef Raskin as he wrote about them first, in his book, <em>The Humane Interface</em>.</p>

<ul>
<li>Raskin&#8217;s First Law: Most human beings can only concentrate on one thing at a time.</li>
<li>Raskin&#8217;s Second Law: Humans take up to ten seconds to prepare for tasks requiring conscious cognition, during which they are unaware of passing time.</li>
</ul>


<p>The entire book is available <a href="http://www.catb.org/esr/writings/taouu/html/">free online</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I've Moved My Blog to Octopress]]></title>
    <link href="http://Poignantcode.com/blog/2012/08/20/ive-moved-my-blog-to-octopress/"/>
    <updated>2012-08-20T19:27:00-04:00</updated>
    <id>http://Poignantcode.com/blog/2012/08/20/ive-moved-my-blog-to-octopress</id>
    <content type="html"><![CDATA[<p>I&#8217;ve decided to move my blog off wordpress for a couple of reasons:</p>

<ul>
<li>From a Pragmatic standpoint, I was going to have to start paying for hosting and since Github offers <a href="http://pages.github.com//" title="Github Pages">free pages</a> it made financial sense.</li>
<li>Octopress is powered by Jekyl so it appeals to the rubyist in me.</li>
<li>Will make it so I won&#8217;t need a cheatsheet when using markdown.</li>
</ul>


<!-- more -->


<p>I&#8217;ve re-read some of my old blog posts and I think for the time being I&#8217;m not going to do a batch importation of them. Instead, I think I will selectively read through and post things that are still pertinent.</p>

<p><code>Edit: I've begun the process and so far it has been enjoyable reviewing my old, somewhat naive, posts.</code></p>
>>>>>>> 6515e152b7c4bd75784ada3ab6b3f77da912f2d1
]]></content>
  </entry>
  
</feed>
